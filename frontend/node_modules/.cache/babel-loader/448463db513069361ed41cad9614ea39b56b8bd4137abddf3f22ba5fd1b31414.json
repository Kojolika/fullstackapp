{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  locations: [],\n  currentLocation: {\n    \"city\": null,\n    \"province\": null,\n    \"country\": null,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"id\": null\n  }\n};\nconst locationsSlice = createSlice({\n  name: 'locations',\n  initialState,\n  reducers: {\n    setUserLocations: (state, action) => {\n      const {\n        locations\n      } = action.payload;\n      state.locations = locations;\n    },\n    addLocation: (state, action) => {\n      const {\n        city,\n        province,\n        country,\n        latitude,\n        longitude,\n        id\n      } = action.payload;\n      state.locations = [...state.locations, {\n        \"city\": city,\n        \"province\": province,\n        \"country\": country,\n        \"latitude\": latitude,\n        \"longitude\": longitude,\n        \"id\": id\n      }];\n    },\n    deleteLocations: (state, action) => {\n      const {\n        ids\n      } = action.payload;\n      const locationsAfterRemoval = state.locations.filter(location => ids.include(locatio.id));\n    },\n    setCurrentLocation: (state, action) => {\n      const {\n        city,\n        province,\n        country,\n        latitude,\n        longitude,\n        id\n      } = action.payload;\n      state.currentLocation = {\n        \"city\": city,\n        \"province\": province,\n        \"country\": country,\n        \"latitude\": latitude,\n        \"longitude\": longitude,\n        \"id\": id //unique database id\n      };\n    }\n  }\n});\n\nexport const {\n  addLocation,\n  setUserLocations,\n  setCurrentLocation\n} = locationsSlice.actions;\nexport default locationsSlice.reducer;\nexport const selectAllLocations = state => state.locations.locations;\nexport const selectCurrentLocation = state => {\n  return state.locations.currentLocation;\n};","map":{"version":3,"names":["createSlice","initialState","locations","currentLocation","locationsSlice","name","reducers","setUserLocations","state","action","payload","addLocation","city","province","country","latitude","longitude","id","deleteLocations","ids","locationsAfterRemoval","filter","location","include","locatio","setCurrentLocation","actions","reducer","selectAllLocations","selectCurrentLocation"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Features/locations/locationsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    locations: [],\r\n    currentLocation: {\r\n        \"city\": null,\r\n        \"province\": null,\r\n        \"country\": null,\r\n        \"latitude\": null,\r\n        \"longitude\": null,\r\n        \"id\": null\r\n    }\r\n};\r\n\r\nconst locationsSlice = createSlice({\r\n    name: 'locations',\r\n    initialState,\r\n    reducers: {\r\n        setUserLocations: (state, action) => {\r\n            const {locations}  = action.payload;\r\n            state.locations = locations;\r\n\r\n        },\r\n        addLocation: (state, action) => {\r\n            const { city, province, country, latitude, longitude, id } = action.payload;\r\n            state.locations = [...state.locations, {\r\n                \"city\": city,\r\n                \"province\": province,\r\n                \"country\": country,\r\n                \"latitude\": latitude,\r\n                \"longitude\": longitude,\r\n                \"id\" : id\r\n            }]\r\n        },\r\n        deleteLocations: (state, action) => {\r\n            const {ids} = action.payload;\r\n            const locationsAfterRemoval = state.locations.filter(location => ids.include(locatio.id))\r\n\r\n        },  \r\n        setCurrentLocation: (state, action) => {\r\n            const { city, province, country, latitude, longitude, id } = action.payload;\r\n            state.currentLocation = {\r\n                \"city\": city,\r\n                \"province\": province,\r\n                \"country\": country,\r\n                \"latitude\": latitude,\r\n                \"longitude\": longitude,\r\n                \"id\" : id //unique database id\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addLocation, setUserLocations, setCurrentLocation } = locationsSlice.actions;\r\n\r\nexport default locationsSlice.reducer;\r\n\r\nexport const selectAllLocations = (state) => state.locations.locations;\r\n\r\nexport const selectCurrentLocation = (state) => {\r\n    return state.locations.currentLocation;\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,eAAe,EAAE;IACb,MAAM,EAAE,IAAI;IACZ,UAAU,EAAE,IAAI;IAChB,SAAS,EAAE,IAAI;IACf,UAAU,EAAE,IAAI;IAChB,WAAW,EAAE,IAAI;IACjB,IAAI,EAAE;EACV;AACJ,CAAC;AAED,MAAMC,cAAc,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,WAAW;EACjBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,gBAAgB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAACP;MAAS,CAAC,GAAIO,MAAM,CAACC,OAAO;MACnCF,KAAK,CAACN,SAAS,GAAGA,SAAS;IAE/B,CAAC;IACDS,WAAW,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEG,IAAI;QAAEC,QAAQ;QAAEC,OAAO;QAAEC,QAAQ;QAAEC,SAAS;QAAEC;MAAG,CAAC,GAAGR,MAAM,CAACC,OAAO;MAC3EF,KAAK,CAACN,SAAS,GAAG,CAAC,GAAGM,KAAK,CAACN,SAAS,EAAE;QACnC,MAAM,EAAEU,IAAI;QACZ,UAAU,EAAEC,QAAQ;QACpB,SAAS,EAAEC,OAAO;QAClB,UAAU,EAAEC,QAAQ;QACpB,WAAW,EAAEC,SAAS;QACtB,IAAI,EAAGC;MACX,CAAC,CAAC;IACN,CAAC;IACDC,eAAe,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAACU;MAAG,CAAC,GAAGV,MAAM,CAACC,OAAO;MAC5B,MAAMU,qBAAqB,GAAGZ,KAAK,CAACN,SAAS,CAACmB,MAAM,CAACC,QAAQ,IAAIH,GAAG,CAACI,OAAO,CAACC,OAAO,CAACP,EAAE,CAAC,CAAC;IAE7F,CAAC;IACDQ,kBAAkB,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAM;QAAEG,IAAI;QAAEC,QAAQ;QAAEC,OAAO;QAAEC,QAAQ;QAAEC,SAAS;QAAEC;MAAG,CAAC,GAAGR,MAAM,CAACC,OAAO;MAC3EF,KAAK,CAACL,eAAe,GAAG;QACpB,MAAM,EAAES,IAAI;QACZ,UAAU,EAAEC,QAAQ;QACpB,SAAS,EAAEC,OAAO;QAClB,UAAU,EAAEC,QAAQ;QACpB,WAAW,EAAEC,SAAS;QACtB,IAAI,EAAGC,EAAE,CAAC;MACd,CAAC;IACL;EACJ;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEN,WAAW;EAAEJ,gBAAgB;EAAEkB;AAAmB,CAAC,GAAGrB,cAAc,CAACsB,OAAO;AAE3F,eAAetB,cAAc,CAACuB,OAAO;AAErC,OAAO,MAAMC,kBAAkB,GAAIpB,KAAK,IAAKA,KAAK,CAACN,SAAS,CAACA,SAAS;AAEtE,OAAO,MAAM2B,qBAAqB,GAAIrB,KAAK,IAAK;EAC5C,OAAOA,KAAK,CAACN,SAAS,CAACC,eAAe;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}