{"ast":null,"code":"import { apiSlice } from \"../../app/api/apiSlice\";\n\n//inject endpoint for the backend API to return user credentials\n//react hook useLoginMutation is automaticly generated from 'login' endpoint\n//https://redux-toolkit.js.org/rtk-query/usage/queries#frequently-used-query-hook-return-values for more info on the auto generated hook\n\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: credentials => ({\n        url: '/login',\n        method: 'POST',\n        body: {\n          ...credentials\n        } //credentials is a json object with fields: username, password\n        //to implement headers at each endpoint check https://redux-toolkit.js.org/rtk-query/api/fetchBaseQuery#text\n      })\n    }),\n\n    logout: builder.mutation({\n      query: token => ({\n        url: '/logout/access',\n        method: 'POST'\n      })\n    }),\n    register: builder.mutation({\n      query: credentials => ({\n        url: '/registration',\n        method: 'POST',\n        body: {\n          ...credentials\n        }\n      })\n    }),\n    getUserLocations: builder.query({\n      query: username => ({\n        url: '/locations',\n        method: 'POST',\n        body: {\n          ...username\n        }\n      })\n    }),\n    addUserLocation: builder.mutation({\n      query: locationData => ({\n        url: '/addLocation',\n        method: 'POST',\n        body: locationData\n      })\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useLogoutMutation,\n  useRegisterMutation,\n  useGetUserLocationsQuery\n} = authApiSlice;","map":{"version":3,"names":["apiSlice","authApiSlice","injectEndpoints","endpoints","builder","login","mutation","query","credentials","url","method","body","logout","token","register","getUserLocations","username","addUserLocation","locationData","useLoginMutation","useLogoutMutation","useRegisterMutation","useGetUserLocationsQuery"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Features/auth/authApiSlice.js"],"sourcesContent":["import { apiSlice } from \"../../app/api/apiSlice\";\r\n\r\n//inject endpoint for the backend API to return user credentials\r\n//react hook useLoginMutation is automaticly generated from 'login' endpoint\r\n//https://redux-toolkit.js.org/rtk-query/usage/queries#frequently-used-query-hook-return-values for more info on the auto generated hook\r\n\r\nexport const authApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: builder => ({\r\n        login: builder.mutation({\r\n            query: credentials => ({\r\n                url: '/login',\r\n                method: 'POST',\r\n                body: {...credentials} //credentials is a json object with fields: username, password\r\n                //to implement headers at each endpoint check https://redux-toolkit.js.org/rtk-query/api/fetchBaseQuery#text\r\n            }),\r\n        }),\r\n        logout: builder.mutation({\r\n            query: token => ({\r\n                url: '/logout/access',\r\n                method: 'POST'\r\n            })\r\n        }),\r\n        register: builder.mutation({\r\n            query: credentials => ({\r\n                url: '/registration',\r\n                method: 'POST',\r\n                body: {...credentials}\r\n            })\r\n        }),\r\n        getUserLocations: builder.query({\r\n            query: username => ({\r\n                url: '/locations',\r\n                method: 'POST',\r\n                body: {...username}\r\n            })\r\n        }),\r\n        addUserLocation: builder.mutation({\r\n            query: locationData => ({\r\n                url: '/addLocation',\r\n                method: 'POST',\r\n                body: locationData\r\n            })\r\n        }) \r\n    })\r\n})\r\n\r\nexport const {\r\n    useLoginMutation,\r\n    useLogoutMutation,\r\n    useRegisterMutation,\r\n    useGetUserLocationsQuery\r\n} = authApiSlice;\r\n\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,wBAAwB;;AAEjD;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGD,QAAQ,CAACE,eAAe,CAAC;EACjDC,SAAS,EAAEC,OAAO,KAAK;IACnBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAC;MACpBC,KAAK,EAAEC,WAAW,KAAK;QACnBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAC,GAAGH;QAAW,CAAC,CAAC;QACvB;MACJ,CAAC;IACL,CAAC,CAAC;;IACFI,MAAM,EAAER,OAAO,CAACE,QAAQ,CAAC;MACrBC,KAAK,EAAEM,KAAK,KAAK;QACbJ,GAAG,EAAE,gBAAgB;QACrBC,MAAM,EAAE;MACZ,CAAC;IACL,CAAC,CAAC;IACFI,QAAQ,EAAEV,OAAO,CAACE,QAAQ,CAAC;MACvBC,KAAK,EAAEC,WAAW,KAAK;QACnBC,GAAG,EAAE,eAAe;QACpBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAC,GAAGH;QAAW;MACzB,CAAC;IACL,CAAC,CAAC;IACFO,gBAAgB,EAAEX,OAAO,CAACG,KAAK,CAAC;MAC5BA,KAAK,EAAES,QAAQ,KAAK;QAChBP,GAAG,EAAE,YAAY;QACjBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAC,GAAGK;QAAQ;MACtB,CAAC;IACL,CAAC,CAAC;IACFC,eAAe,EAAEb,OAAO,CAACE,QAAQ,CAAC;MAC9BC,KAAK,EAAEW,YAAY,KAAK;QACpBT,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEO;MACV,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTC,gBAAgB;EAChBC,iBAAiB;EACjBC,mBAAmB;EACnBC;AACJ,CAAC,GAAGrB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}