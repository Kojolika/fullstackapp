{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Locations.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectCurrentUser } from \"../../Features/auth/authSlice\";\nimport { useGetUserLocationsQuery } from \"../../Features/auth/authApiSlice\";\nimport { setLocation } from \"../../Features/locations/currentLocationSlice\";\nimport LocationWidget from \"../Modules/LocationWidget\";\nimport '../../Styles/locations.css';\nimport '../../Styles/app.css';\nimport { Delete } from \"../../Icons/svgImages/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOOLBAR_STATE = {\n  NONE: 'NONE',\n  DELETING: 'DELETING'\n};\nconst Locations = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(selectCurrentUser);\n  const skipUserLocations = user ? false : true;\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    refetch\n  } = useGetUserLocationsQuery({\n    'username': user\n  }, {\n    skip: skipUserLocations\n  });\n  const locations = isSuccess ? data.locations : [];\n  const [toolbarState, setToolbarState] = useState(TOOLBAR_STATE.NONE);\n  const toggleDeleting = () => {\n    if (toolbarState === TOOLBAR_STATE.DELETING) setToolbarState(TOOLBAR_STATE.NONE);else setToolbarState(TOOLBAR_STATE.DELETING);\n  };\n  const deleteLocationButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: toolbarState === TOOLBAR_STATE.DELETING ? \"optionsButtons button-selected\" : \"optionsButtons\",\n    onClick: () => toggleDeleting(),\n    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 178\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 34\n  }, this);\n  const [markedForDeletionList, setMarkedForDeletionList] = useState([]);\n  const addLocationToMarkedForDeletionList = id => {\n    const newList = [...markedForDeletionList, id];\n    setMarkedForDeletionList(newList);\n  };\n  const removeLocationFromMarkedForDeletionList = id => {\n    const index = markedForDeletionList.indexOf(id);\n    if (index > -1) {\n      // only splice array when item is found\n      const markedForDeletionListCopy = markedForDeletionList;\n      const newArray1 = markedForDeletionListCopy.filter(item => item !== id);\n      setMarkedForDeletionList(newArray1);\n    }\n  };\n  const handleLocationDeletion = () => {};\n  const confirmDeletionButton = markedForDeletionList.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirm-location-delete\",\n    onClick: () => handleLocationDeletion(),\n    children: markedForDeletionList.length === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Remove Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Remove \", markedForDeletionList.length, \" locations\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 82\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  useEffect(() => {\n    setMarkedForDeletionList([]);\n  }, [toolbarState]);\n  const handleLocatonClick = (city, province, country) => {\n    dispatch(setLocation({\n      \"city\": city,\n      \"province\": province,\n      \"country\": country\n    }));\n    navigate('/location');\n  };\n\n  //if locations is being loaded still, just displaying loading text\n  //otherwise if locations is empty, display text to tell the user to add a location\n  //otherwise display all locations that the user has\n  const renderedLocations = isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this) : locations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Add a location to get started\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 13\n  }, this) : locations.map(location => /*#__PURE__*/_jsxDEV(LocationWidget, {\n    className: \"location\",\n    location: {\n      \"city\": {\n        \"name\": location.city ? location.city : null\n      },\n      \"province\": {},\n      \"country\": {}\n    },\n    location_id: location.id,\n    country: location.country ? location.country : null,\n    province: location.province ? location.province : null,\n    city: location.city ? location.city : null,\n    latitude: location.latitude ? location.latitude : null,\n    longitude: location.longitude ? location.longitude : null,\n    toolbarState: toolbarState,\n    addLocationToMarkedForDeletionList: addLocationToMarkedForDeletionList,\n    removeLocationFromMarkedForDeletionList: removeLocationFromMarkedForDeletionList,\n    onClick: handleLocatonClick\n  }, location.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 17\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"locationsMainPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"locationsContainer\",\n      children: [confirmDeletionButton, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locationsOptionsArea border\",\n        children: deleteLocationButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locationsList\",\n        children: renderedLocations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Locations, \"yFzf7B3X7iq5T9WT+ajfBHCYnqg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useGetUserLocationsQuery];\n});\n_c = Locations;\nexport { TOOLBAR_STATE };\nexport default Locations;\nvar _c;\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useState","useNavigate","selectCurrentUser","useGetUserLocationsQuery","setLocation","LocationWidget","Delete","TOOLBAR_STATE","NONE","DELETING","Locations","dispatch","navigate","user","skipUserLocations","data","isLoading","isSuccess","refetch","skip","locations","toolbarState","setToolbarState","toggleDeleting","deleteLocationButton","markedForDeletionList","setMarkedForDeletionList","addLocationToMarkedForDeletionList","id","newList","removeLocationFromMarkedForDeletionList","index","indexOf","markedForDeletionListCopy","newArray1","filter","item","handleLocationDeletion","confirmDeletionButton","length","handleLocatonClick","city","province","country","renderedLocations","map","location","latitude","longitude"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Pages/Locations.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { selectCurrentUser } from \"../../Features/auth/authSlice\";\r\nimport { useGetUserLocationsQuery } from \"../../Features/auth/authApiSlice\";\r\nimport { setLocation } from \"../../Features/locations/currentLocationSlice\";\r\n\r\nimport LocationWidget from \"../Modules/LocationWidget\";\r\n\r\nimport '../../Styles/locations.css';\r\nimport '../../Styles/app.css';\r\n\r\nimport { Delete } from \"../../Icons/svgImages/index.js\";\r\n\r\n\r\nconst TOOLBAR_STATE = {\r\n    NONE: 'NONE',\r\n    DELETING: 'DELETING',\r\n}\r\n\r\n\r\nconst Locations = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const user = useSelector(selectCurrentUser);\r\n    const skipUserLocations = user ? false : true;\r\n    const { data, isLoading, isSuccess, refetch } = useGetUserLocationsQuery({ 'username': user }, { skip: skipUserLocations });\r\n    const locations = isSuccess ? data.locations : [];\r\n\r\n    const [toolbarState, setToolbarState] = useState(TOOLBAR_STATE.NONE);\r\n\r\n    const toggleDeleting = () => {\r\n        if (toolbarState === TOOLBAR_STATE.DELETING) setToolbarState(TOOLBAR_STATE.NONE)\r\n        else setToolbarState(TOOLBAR_STATE.DELETING)\r\n    }\r\n    const deleteLocationButton = <div className={toolbarState === TOOLBAR_STATE.DELETING ? \"optionsButtons button-selected\" : \"optionsButtons\"} onClick={() => toggleDeleting()}><Delete /></div>\r\n\r\n    const [markedForDeletionList, setMarkedForDeletionList] = useState([]);\r\n    const addLocationToMarkedForDeletionList = id => {\r\n        const newList = [...markedForDeletionList, id]\r\n        setMarkedForDeletionList(newList);\r\n    }\r\n    const removeLocationFromMarkedForDeletionList = id => {\r\n        const index = markedForDeletionList.indexOf(id);\r\n        if (index > -1) { // only splice array when item is found\r\n            const markedForDeletionListCopy = markedForDeletionList;\r\n            const newArray1 = markedForDeletionListCopy.filter(item => item !== id)\r\n            setMarkedForDeletionList(newArray1);\r\n        }\r\n    }\r\n    const handleLocationDeletion = () => {\r\n\r\n    }\r\n    const confirmDeletionButton = markedForDeletionList.length !== 0 ?\r\n        <div className=\"confirm-location-delete\" onClick={() => handleLocationDeletion()}>\r\n            {markedForDeletionList.length === 1 ? <span>Remove Location</span> : <span>Remove {markedForDeletionList.length} locations</span>}\r\n        </div>\r\n        : <></>;\r\n\r\n    useEffect(() => {\r\n        setMarkedForDeletionList([]);\r\n    }, [toolbarState])\r\n\r\n    const handleLocatonClick = (city, province, country) => {\r\n        dispatch(setLocation({\r\n            \"city\": city,\r\n            \"province\": province,\r\n            \"country\": country\r\n        }));\r\n        navigate('/location');\r\n    }\r\n\r\n    //if locations is being loaded still, just displaying loading text\r\n    //otherwise if locations is empty, display text to tell the user to add a location\r\n    //otherwise display all locations that the user has\r\n    const renderedLocations = isLoading ?\r\n        <div>loading...</div>\r\n        : locations.length === 0 ?\r\n            <div>Add a location to get started</div>\r\n            : locations.map(location =>\r\n                <LocationWidget\r\n                    className=\"location\"\r\n                    key={location.id}\r\n                    location={{\r\n                        \"city\":{\r\n                            \"name\": location.city ? location.city : null\r\n                        },\r\n                        \"province\":{\r\n\r\n                        },\r\n                        \"country\":{\r\n\r\n                        }\r\n                    }}\r\n                    location_id={location.id}\r\n                    country={location.country ? location.country : null}\r\n                    province={location.province ? location.province : null}\r\n                    city={location.city ? location.city : null}\r\n                    latitude={location.latitude ? location.latitude : null}\r\n                    longitude={location.longitude ? location.longitude : null}\r\n                    toolbarState={toolbarState}\r\n                    addLocationToMarkedForDeletionList={addLocationToMarkedForDeletionList}\r\n                    removeLocationFromMarkedForDeletionList={removeLocationFromMarkedForDeletionList}\r\n                    onClick={handleLocatonClick}\r\n                />)\r\n\r\n    return (\r\n        <div className=\"locationsMainPage\">\r\n            <div className=\"locationsContainer\">\r\n                {confirmDeletionButton}\r\n                <div className=\"locationsOptionsArea border\">\r\n                    {deleteLocationButton}\r\n                </div>\r\n                <div className=\"locationsList\">\r\n                    {renderedLocations}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport { TOOLBAR_STATE }\r\nexport default Locations;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}