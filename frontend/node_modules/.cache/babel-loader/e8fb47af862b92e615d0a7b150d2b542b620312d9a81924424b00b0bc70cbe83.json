{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Atoms\\\\SelectCity.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGetCitiesQuery } from '../Features/locations/locationApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectCity = props => {\n  _s();\n  const {\n    data: dataCities,\n    isSuccess: isSuccessCities\n  } = useGetCitiesQuery({\n    \"country\": props.country,\n    \"state\": props.state\n  });\n  const cities = isSuccessCities ? dataCities.data : [];\n  const optionsCities = [];\n  cities.forEach(item => {\n    optionsCities.push({\n      value: item.city,\n      label: item.city\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: optionsCities,\n      onChange: newValue => setCity(newValue.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectCity, \"HWthImgCKafagxeu6qFUEDrqHzA=\", false, function () {\n  return [useGetCitiesQuery];\n});\n_c = SelectCity;\nexport default SelectCity;\nvar _c;\n$RefreshReg$(_c, \"SelectCity\");","map":{"version":3,"names":["React","useGetCitiesQuery","SelectCity","props","data","dataCities","isSuccess","isSuccessCities","country","state","cities","optionsCities","forEach","item","push","value","city","label","newValue","setCity"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Atoms/SelectCity.js"],"sourcesContent":["import React from 'react'\r\nimport { useGetCitiesQuery } from '../Features/locations/locationApiSlice';\r\n\r\nconst SelectCity = (props) => {\r\n\r\n    const { data: dataCities, isSuccess: isSuccessCities } = useGetCitiesQuery({ \"country\": props.country, \"state\": props.state });\r\n    const cities = isSuccessCities ? dataCities.data : [];\r\n    const optionsCities = [];\r\n    cities.forEach(item => {\r\n        optionsCities.push({\r\n            value: item.city,\r\n            label: item.city\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <span>City</span>\r\n            <br />\r\n            <Select\r\n                options={optionsCities}\r\n                onChange={(newValue) => setCity(newValue.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectCity"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,wCAAwC;AAAC;AAE3E,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM;IAAEC,IAAI,EAAEC,UAAU;IAAEC,SAAS,EAAEC;EAAgB,CAAC,GAAGN,iBAAiB,CAAC;IAAE,SAAS,EAAEE,KAAK,CAACK,OAAO;IAAE,OAAO,EAAEL,KAAK,CAACM;EAAM,CAAC,CAAC;EAC9H,MAAMC,MAAM,GAAGH,eAAe,GAAGF,UAAU,CAACD,IAAI,GAAG,EAAE;EACrD,MAAMO,aAAa,GAAG,EAAE;EACxBD,MAAM,CAACE,OAAO,CAACC,IAAI,IAAI;IACnBF,aAAa,CAACG,IAAI,CAAC;MACfC,KAAK,EAAEF,IAAI,CAACG,IAAI;MAChBC,KAAK,EAAEJ,IAAI,CAACG;IAChB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACI;IAAA,wBACI;MAAA,UAAM;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO,eACjB;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,MAAM;MACH,OAAO,EAAEL,aAAc;MACvB,QAAQ,EAAGO,QAAQ,IAAKC,OAAO,CAACD,QAAQ,CAACH,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAClD;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAtBKb,UAAU;EAAA,QAE6CD,iBAAiB;AAAA;AAAA,KAFxEC,UAAU;AAwBhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}