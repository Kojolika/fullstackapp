{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst locationsSlice = createSlice({\n  name: 'locations',\n  initialState,\n  reducers: {\n    setUserLocations: (state, action) => {\n      const {\n        locations\n      } = action.payload;\n      state.locations = locations;\n    },\n    addLocation: (state, action) => {\n      const {\n        city,\n        province,\n        country\n      } = action.payload;\n      state.locations = [...state.locations, {\n        \"city\": city,\n        \"province\": province,\n        \"country\": country\n      }];\n    }\n  }\n});\nexport const {\n  addLocation,\n  setUserLocations\n} = locationsSlice.actions;\nexport default locationsSlice.reducer;\nexport const selectAllLocations = state => state.locations.locations;\nexport const isLocationInList = state => {\n  state.locations.locations.forEach(element => {});\n};","map":{"version":3,"names":["createSlice","initialState","locationsSlice","name","reducers","setUserLocations","state","action","locations","payload","addLocation","city","province","country","actions","reducer","selectAllLocations","isLocationInList","forEach","element"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Features/locations/locationsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst locationsSlice = createSlice({\r\n    name: 'locations',\r\n    initialState,\r\n    reducers:{\r\n        setUserLocations: (state, action) =>\r\n        {\r\n            const {locations} = action.payload;\r\n            state.locations = locations;\r\n\r\n        },\r\n        addLocation: (state,action) =>\r\n        {\r\n            const {city, province, country} = action.payload;\r\n            state.locations = [...state.locations, {\r\n                \"city\" : city,\r\n                \"province\" : province,\r\n                \"country\" : country\r\n            }]\r\n        }\r\n    }\r\n});\r\n\r\nexport const {addLocation, setUserLocations} = locationsSlice.actions;\r\n\r\nexport default locationsSlice.reducer;\r\n\r\nexport const selectAllLocations = (state) => state.locations.locations;\r\nexport const isLocationInList = (state) =>{\r\n    state.locations.locations.forEach(element => {\r\n        \r\n    });\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,cAAc,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,WAAW;EACjBF,YAAY;EACZG,QAAQ,EAAC;IACLC,gBAAgB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAChC;MACI,MAAM;QAACC;MAAS,CAAC,GAAGD,MAAM,CAACE,OAAO;MAClCH,KAAK,CAACE,SAAS,GAAGA,SAAS;IAE/B,CAAC;IACDE,WAAW,EAAE,CAACJ,KAAK,EAACC,MAAM,KAC1B;MACI,MAAM;QAACI,IAAI;QAAEC,QAAQ;QAAEC;MAAO,CAAC,GAAGN,MAAM,CAACE,OAAO;MAChDH,KAAK,CAACE,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACE,SAAS,EAAE;QACnC,MAAM,EAAGG,IAAI;QACb,UAAU,EAAGC,QAAQ;QACrB,SAAS,EAAGC;MAChB,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH,WAAW;EAAEL;AAAgB,CAAC,GAAGH,cAAc,CAACY,OAAO;AAErE,eAAeZ,cAAc,CAACa,OAAO;AAErC,OAAO,MAAMC,kBAAkB,GAAIV,KAAK,IAAKA,KAAK,CAACE,SAAS,CAACA,SAAS;AACtE,OAAO,MAAMS,gBAAgB,GAAIX,KAAK,IAAI;EACtCA,KAAK,CAACE,SAAS,CAACA,SAAS,CAACU,OAAO,CAACC,OAAO,IAAI,CAE7C,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}