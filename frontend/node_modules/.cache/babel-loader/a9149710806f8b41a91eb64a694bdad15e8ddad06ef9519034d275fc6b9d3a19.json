{"ast":null,"code":"import { apiSlice } from \"../../app/api/apiSlice\";\n\n//inject endpoint for the backend API to return user credentials\n//https://redux-toolkit.js.org/rtk-query/usage/queries#frequently-used-query-hook-return-values for more info on the auto generated hook\n\nexport const locationApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getCountries: builder.query({\n      query: () => ({\n        url: '/airVisualApi/countries',\n        method: 'GET'\n      })\n    }),\n    getStates: builder.query({\n      query: country => ({\n        url: '/airVisualApi/states',\n        method: 'POST',\n        body: {\n          ...country\n        }\n      })\n    }),\n    getCities: builder.query({\n      query: stateAndCountry => ({\n        url: '/airVisualApi/cities',\n        method: 'POST',\n        body: {\n          \"state\": stateAndCountry.state,\n          \"country\": stateAndCountry.country\n        }\n      })\n    })\n  })\n});\nexport const {\n  useGetCitiesQuery,\n  useGetCountriesQuery,\n  useGetStatesQuery\n} = locationApiSlice;","map":{"version":3,"names":["apiSlice","locationApiSlice","injectEndpoints","endpoints","builder","getCountries","query","url","method","getStates","country","body","getCities","stateAndCountry","state","useGetCitiesQuery","useGetCountriesQuery","useGetStatesQuery"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Features/locations/locationApiSlice.js"],"sourcesContent":["import { apiSlice } from \"../../app/api/apiSlice\";\r\n\r\n//inject endpoint for the backend API to return user credentials\r\n//https://redux-toolkit.js.org/rtk-query/usage/queries#frequently-used-query-hook-return-values for more info on the auto generated hook\r\n\r\nexport const locationApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: builder => ({\r\n        getCountries: builder.query({\r\n            query: () => ({\r\n                url: '/airVisualApi/countries',\r\n                method: 'GET'\r\n            }),\r\n        }),\r\n        getStates: builder.query({\r\n            query: country => ({\r\n                url: '/airVisualApi/states',\r\n                method: 'POST',\r\n                body: {...country}\r\n            })\r\n        }),\r\n        getCities: builder.query({\r\n            query: stateAndCountry => ({\r\n                url: '/airVisualApi/cities',\r\n                method: 'POST',\r\n                body: {\r\n                    \"state\" : stateAndCountry.state,\r\n                    \"country\"  : stateAndCountry.country  \r\n                }\r\n            })\r\n        })\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCitiesQuery,\r\n    useGetCountriesQuery,\r\n    useGetStatesQuery\r\n} = locationApiSlice;\r\n\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,wBAAwB;;AAEjD;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAGD,QAAQ,CAACE,eAAe,CAAC;EACrDC,SAAS,EAAEC,OAAO,KAAK;IACnBC,YAAY,EAAED,OAAO,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAE,OAAO;QACVC,GAAG,EAAE,yBAAyB;QAC9BC,MAAM,EAAE;MACZ,CAAC;IACL,CAAC,CAAC;IACFC,SAAS,EAAEL,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAEI,OAAO,KAAK;QACfH,GAAG,EAAE,sBAAsB;QAC3BC,MAAM,EAAE,MAAM;QACdG,IAAI,EAAE;UAAC,GAAGD;QAAO;MACrB,CAAC;IACL,CAAC,CAAC;IACFE,SAAS,EAAER,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAEO,eAAe,KAAK;QACvBN,GAAG,EAAE,sBAAsB;QAC3BC,MAAM,EAAE,MAAM;QACdG,IAAI,EAAE;UACF,OAAO,EAAGE,eAAe,CAACC,KAAK;UAC/B,SAAS,EAAID,eAAe,CAACH;QACjC;MACJ,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTK,iBAAiB;EACjBC,oBAAoB;EACpBC;AACJ,CAAC,GAAGhB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}