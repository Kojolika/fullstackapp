{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Atoms\\\\SearchLocation.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport processed_locations from '../../data/processed_locations.json';\nimport '../../Styles/searchBar.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchLocation = () => {\n  _s();\n  const [isFocused, setIsFocused] = useState(false);\n  const [searchValue, setSearchValue] = useState(null);\n  const initialQuery = {\n    'countries': [],\n    'states': [],\n    'cities': []\n  };\n  const [queryResult, setQueryResult] = useState(initialQuery);\n  const QUERY_TYPE = {\n    COUNTRY: \"COUNTRY\",\n    STATE: \"STATE\",\n    CITY: \"CITY\"\n  };\n  const handleChange = newValue => {\n    setSearchValue(newValue);\n  };\n  useEffect(() => {\n    queryLocations(searchValue, QUERY_TYPE.COUNTRY);\n    queryLocations(searchValue, QUERY_TYPE.STATE);\n    queryLocations(searchValue, QUERY_TYPE.CITY);\n  }, [searchValue]);\n  const queryLocations = (query, type) => {\n    if (query === '' || query === null || query === undefined) return;\n    const lowercaseQuery = query.toLowerCase();\n    const regexQuery = new RegExp(lowercaseQuery);\n    switch (type) {\n      case QUERY_TYPE.COUNTRY:\n        const countriesQueryResults = [];\n        processed_locations.forEach(country => {\n          if (countriesQueryResults.length === 10) return; //only return first 10 results\n          const lowercaseCountry = country.name.toLowerCase();\n          if (regexQuery.test(lowercaseCountry)) {\n            countriesQueryResults.push(country.name);\n          }\n        });\n        const newQueryResult = queryResult;\n        newQueryResult.countries = countriesQueryResults;\n        setQueryResult(newQueryResult);\n        break;\n      case QUERY_TYPE.STATE:\n        //console.log(\"switch state\");\n        break;\n      case QUERY_TYPE.CITY:\n        //console.log(\"switch city\");\n\n        break;\n    }\n  };\n  const countriesQueryResultsElements = queryResult.countries.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : queryResult.countries.map((item, index) => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"queryResult\",\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  });\n  const statesQueryResultsElements = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const citiesQueryResultsElements = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const dropDown = isFocused ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdownBorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"dropdownLabel\",\n      htmlFor: \"dropdownResultsCountry\",\n      children: \"Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownResults\",\n      id: \"dropdownResultsCountry\",\n      children: countriesQueryResultsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"dropdownLabel\",\n      children: \"State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownResults\",\n      id: \"dropdownResultsState\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"dropdownLabel\",\n      children: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownResults\",\n      id: \"dropdownResultsCity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 33\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"location-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"location-search\",\n      type: \"text\",\n      name: \"cities\",\n      placeholder: \"Search country, state, city... \",\n      onChange: e => handleChange(document.getElementById(\"location-search\").value),\n      onFocus: () => setIsFocused(true),\n      onBlur: () => setIsFocused(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), dropDown]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchLocation, \"jo8uuS/kwHMYaiGse5rzuHlSnAM=\");\n_c = SearchLocation;\nexport default SearchLocation;\nvar _c;\n$RefreshReg$(_c, \"SearchLocation\");","map":{"version":3,"names":["useState","useEffect","processed_locations","SearchLocation","isFocused","setIsFocused","searchValue","setSearchValue","initialQuery","queryResult","setQueryResult","QUERY_TYPE","COUNTRY","STATE","CITY","handleChange","newValue","queryLocations","query","type","undefined","lowercaseQuery","toLowerCase","regexQuery","RegExp","countriesQueryResults","forEach","country","length","lowercaseCountry","name","test","push","newQueryResult","countries","countriesQueryResultsElements","map","item","index","statesQueryResultsElements","citiesQueryResultsElements","dropDown","e","document","getElementById","value"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/SearchLocation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport processed_locations from '../../data/processed_locations.json'\r\n\r\nimport '../../Styles/searchBar.css';\r\n\r\nconst SearchLocation = () => {\r\n\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const [searchValue, setSearchValue] = useState(null);\r\n    const initialQuery = {\r\n        'countries': [],\r\n        'states': [],\r\n        'cities': []\r\n    }\r\n    const [queryResult, setQueryResult] = useState(initialQuery);\r\n\r\n    const QUERY_TYPE = {\r\n        COUNTRY: \"COUNTRY\",\r\n        STATE: \"STATE\",\r\n        CITY: \"CITY\"\r\n    }\r\n\r\n    const handleChange = (newValue) => {\r\n        setSearchValue(newValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        queryLocations(searchValue, QUERY_TYPE.COUNTRY);\r\n        queryLocations(searchValue, QUERY_TYPE.STATE);\r\n        queryLocations(searchValue, QUERY_TYPE.CITY);\r\n    }, [searchValue])\r\n\r\n    const queryLocations = (query, type) => {\r\n\r\n        if(query === '' || query === null || query === undefined) return; \r\n\r\n        const lowercaseQuery = query.toLowerCase();\r\n        const regexQuery = new RegExp(lowercaseQuery);\r\n\r\n        switch (type) {\r\n            case QUERY_TYPE.COUNTRY:\r\n\r\n                const countriesQueryResults = []\r\n                processed_locations.forEach((country)=>{\r\n                    if(countriesQueryResults.length === 10) return; //only return first 10 results\r\n                    const lowercaseCountry = country.name.toLowerCase();\r\n                    if(regexQuery.test(lowercaseCountry)){\r\n                        countriesQueryResults.push(country.name);\r\n                    }\r\n                })\r\n                const newQueryResult = queryResult;\r\n                newQueryResult.countries = countriesQueryResults;\r\n                setQueryResult(newQueryResult);\r\n\r\n                break;\r\n\r\n            case QUERY_TYPE.STATE:\r\n                //console.log(\"switch state\");\r\n                break;\r\n\r\n            case QUERY_TYPE.CITY:\r\n                //console.log(\"switch city\");\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    const countriesQueryResultsElements = queryResult.countries.length === 0 ? <></> : queryResult.countries.map((item, index)=>{\r\n        <div className=\"queryResult\" key={index} >{item}</div>\r\n    });\r\n    const statesQueryResultsElements = <></>;\r\n    const citiesQueryResultsElements = <></>;\r\n\r\n    const dropDown = isFocused? <div className=\"dropdownBorder\">\r\n        <label className=\"dropdownLabel\" htmlFor=\"dropdownResultsCountry\" >Country</label>\r\n        <div className=\"dropdownResults\" id=\"dropdownResultsCountry\">{countriesQueryResultsElements}</div>\r\n\r\n        <label className=\"dropdownLabel\" >State</label>\r\n        <div className=\"dropdownResults\" id=\"dropdownResultsState\"></div>\r\n\r\n        <label className=\"dropdownLabel\" >City</label>\r\n        <div className=\"dropdownResults\" id=\"dropdownResultsCity\"></div>\r\n    </div> : <></>;\r\n\r\n    return (\r\n        <div id=\"location-search-container\">\r\n            <input id=\"location-search\"\r\n                type=\"text\"\r\n                name=\"cities\"\r\n                placeholder={\"Search country, state, city... \"}\r\n                onChange={(e) => handleChange(document.getElementById(\"location-search\").value)}\r\n                onFocus={()=>setIsFocused(true)}\r\n                 onBlur={()=>setIsFocused(false)} \r\n            />\r\n            { dropDown }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchLocation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}