{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Atoms\\\\SelectState.js\",\n  _s = $RefreshSig$();\nimport Select from 'react-select';\nimport { useEffect } from 'react';\nimport { useGetStatesQuery } from '../../Features/locations/locationApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectState = props => {\n  _s();\n  const {\n    data: stateList,\n    currentData: currentStateList,\n    isLoading,\n    isSuccess,\n    refetch\n  } = useGetStatesQuery({\n    \"country\": props.country\n  });\n  const states = isSuccess ? currentStateList ? currentStateList.data : stateList.data : [];\n  const optionsStates = [];\n  const loadingMessage = 'Loading States...';\n  useEffect(() => {\n    states.forEach(item => {\n      optionsStates.push({\n        value: item.state,\n        label: item.state\n      });\n    });\n  }, [currentStateList, stateList]);\n  const handleChange = newValue => {\n    props.setState(newValue.value);\n  };\n  useEffect(() => {\n    refetch();\n  }, [props.country]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"state\",\n      children: \"State/Province\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"state\",\n      isLoading: isLoading ? true : false,\n      loadingMessage: loadingMessage,\n      options: optionsStates,\n      onChange: newValue => handleChange(newValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectState, \"IJpLCsTsht8opaJs5WePjWf7rKk=\", false, function () {\n  return [useGetStatesQuery];\n});\n_c = SelectState;\nexport default SelectState;\nvar _c;\n$RefreshReg$(_c, \"SelectState\");","map":{"version":3,"names":["Select","useEffect","useGetStatesQuery","SelectState","props","data","stateList","currentData","currentStateList","isLoading","isSuccess","refetch","country","states","optionsStates","loadingMessage","forEach","item","push","value","state","label","handleChange","newValue","setState"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/SelectState.js"],"sourcesContent":["import Select from 'react-select'\r\nimport { useEffect } from 'react';\r\nimport { useGetStatesQuery } from '../../Features/locations/locationApiSlice';\r\n\r\nconst SelectState = (props) => {\r\n\r\n    const { data: stateList, currentData: currentStateList, isLoading, isSuccess, refetch } = useGetStatesQuery({ \"country\": props.country });\r\n    const states = isSuccess ? currentStateList ? currentStateList.data : stateList.data : [];\r\n    const optionsStates = [];\r\n\r\n    const loadingMessage = 'Loading States...';\r\n\r\n    useEffect(() => {\r\n        states.forEach(item => {\r\n            optionsStates.push({\r\n                value: item.state,\r\n                label: item.state\r\n            });\r\n        });\r\n    }, [currentStateList, stateList])\r\n\r\n    const handleChange = (newValue) =>{\r\n        props.setState(newValue.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [props.country])\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor='state'>State/Province</label>\r\n            <br />\r\n            <Select\r\n                id='state'\r\n                isLoading={isLoading ? true : false}\r\n                loadingMessage={loadingMessage}\r\n                options={optionsStates}\r\n                onChange={(newValue) => handleChange(newValue)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectState"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,cAAc;AACjC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,iBAAiB,QAAQ,2CAA2C;AAAC;AAE9E,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAE3B,MAAM;IAAEC,IAAI,EAAEC,SAAS;IAAEC,WAAW,EAAEC,gBAAgB;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGT,iBAAiB,CAAC;IAAE,SAAS,EAAEE,KAAK,CAACQ;EAAQ,CAAC,CAAC;EACzI,MAAMC,MAAM,GAAGH,SAAS,GAAGF,gBAAgB,GAAGA,gBAAgB,CAACH,IAAI,GAAGC,SAAS,CAACD,IAAI,GAAG,EAAE;EACzF,MAAMS,aAAa,GAAG,EAAE;EAExB,MAAMC,cAAc,GAAG,mBAAmB;EAE1Cd,SAAS,CAAC,MAAM;IACZY,MAAM,CAACG,OAAO,CAACC,IAAI,IAAI;MACnBH,aAAa,CAACI,IAAI,CAAC;QACfC,KAAK,EAAEF,IAAI,CAACG,KAAK;QACjBC,KAAK,EAAEJ,IAAI,CAACG;MAChB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,CAACZ,gBAAgB,EAAEF,SAAS,CAAC,CAAC;EAEjC,MAAMgB,YAAY,GAAIC,QAAQ,IAAI;IAC9BnB,KAAK,CAACoB,QAAQ,CAACD,QAAQ,CAACJ,KAAK,CAAC;EAClC,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZU,OAAO,EAAE;EACb,CAAC,EAAE,CAACP,KAAK,CAACQ,OAAO,CAAC,CAAC;EAEnB,oBACI;IAAA,wBACI;MAAO,OAAO,EAAC,OAAO;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC7C;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,MAAM;MACH,EAAE,EAAC,OAAO;MACV,SAAS,EAAEH,SAAS,GAAG,IAAI,GAAG,KAAM;MACpC,cAAc,EAAEM,cAAe;MAC/B,OAAO,EAAED,aAAc;MACvB,QAAQ,EAAGS,QAAQ,IAAKD,YAAY,CAACC,QAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QACjD;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAtCKpB,WAAW;EAAA,QAE6ED,iBAAiB;AAAA;AAAA,KAFzGC,WAAW;AAwCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}