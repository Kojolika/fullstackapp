{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from '../../Features/auth/authSlice';\nimport { setUserLocations } from '../../Features/locations/locationsSlice';\nimport { useRegisterMutation } from '../../Features/auth/authApiSlice';\nimport '../../Styles/login.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [confirmPwd, setConfirmPwd] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const navigate = useNavigate();\n  const [register, {\n    isLoading\n  }] = useRegisterMutation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (pwd !== confirmPwd) {\n        const newError = \"Password is not the same!\";\n        setErrMsg(newError);\n        return;\n      }\n      const userData = await register({\n        'username': user,\n        'password': pwd\n      }).unwrap();\n      const accessToken = userData.access_token;\n      dispatch(setCredentials({\n        user,\n        accessToken\n      }));\n\n      //set user locations as empty if new user\n      //if not done the application will retain the state from another user logged in on the same device\n      dispatch(setUserLocations({\n        \"locations\": []\n      }));\n      setUser('');\n      setPwd('');\n      navigate('/locations');\n    } catch (err) {\n      var _err$data;\n      if (err !== null && err !== void 0 && (_err$data = err.data) !== null && _err$data !== void 0 && _err$data.message) {\n        setErrMsg(err.data.message);\n      } else {\n        setErrMsg('No server response.');\n      }\n      errRef.current.focus();\n    }\n  };\n  const handleUserInput = e => setUser(e.target.value);\n  const handlePwdInput = e => setPwd(e.target.value);\n  const handlePwdConfirmInput = e => setConfirmPwd(e.target.value);\n  const content = isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"login\",\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 33\n  }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg !== '' ? \"errmsg\" : \"offscreen\",\n      children: [\" \", errMsg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        ref: userRef,\n        value: user,\n        onChange: handleUserInput,\n        autoComplete: \"off\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: handlePwdInput,\n        value: pwd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        onChange: handlePwdConfirmInput,\n        value: confirmPwd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n  return content;\n};\n_s(Register, \"+wRsLsnKPD3JK/tmadUAd+QDpV8=\", false, function () {\n  return [useNavigate, useRegisterMutation, useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","useState","useEffect","useNavigate","useDispatch","setCredentials","setUserLocations","useRegisterMutation","Link","Register","userRef","errRef","user","setUser","pwd","setPwd","confirmPwd","setConfirmPwd","errMsg","setErrMsg","navigate","register","isLoading","dispatch","current","focus","handleSubmit","e","preventDefault","newError","userData","unwrap","accessToken","access_token","err","data","message","handleUserInput","target","value","handlePwdInput","handlePwdConfirmInput","content"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Pages/Register.js"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCredentials } from '../../Features/auth/authSlice';\r\nimport { setUserLocations } from '../../Features/locations/locationsSlice';\r\n\r\nimport { useRegisterMutation } from '../../Features/auth/authApiSlice';\r\n\r\nimport '../../Styles/login.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n    const [user, setUser] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [confirmPwd, setConfirmPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const [register, { isLoading }] = useRegisterMutation();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (pwd !== confirmPwd) {\r\n                const newError = \"Password is not the same!\";\r\n                setErrMsg(newError);\r\n                return;\r\n            }\r\n\r\n            const userData = await register({ 'username': user, 'password': pwd }).unwrap();\r\n            const accessToken = userData.access_token;\r\n            dispatch(setCredentials({ user, accessToken }));\r\n\r\n            //set user locations as empty if new user\r\n            //if not done the application will retain the state from another user logged in on the same device\r\n            dispatch(setUserLocations({ \"locations\": [] }));\r\n\r\n            setUser('');\r\n            setPwd('');\r\n            navigate('/locations')\r\n\r\n        }\r\n        catch (err) {\r\n            if (err?.data?.message) {\r\n                setErrMsg(err.data.message);\r\n            } else {\r\n                setErrMsg('No server response.');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleUserInput = (e) => setUser(e.target.value);\r\n    const handlePwdInput = (e) => setPwd(e.target.value);\r\n    const handlePwdConfirmInput = (e) => setConfirmPwd(e.target.value);\r\n\r\n    const content = isLoading ? <h1 className='login'>loading...</h1> : (\r\n        <section className='login'>\r\n            <p ref={errRef} className={errMsg !== '' ? \"errmsg\" : \"offscreen\"}> {errMsg}</p>\r\n\r\n            <h1>Register</h1>\r\n\r\n            <form className='loginForm' onSubmit={handleSubmit}>\r\n                <label htmlFor='username'>Username:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    ref={userRef}\r\n                    value={user}\r\n                    onChange={handleUserInput}\r\n                    autoComplete=\"off\"\r\n                    required\r\n                />\r\n                <label htmlFor='password'>Password:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    onChange={handlePwdInput}\r\n                    value={pwd}\r\n                    required\r\n                />\r\n                <label htmlFor='confirmPassword'>Confirm Password:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"confirmPassword\"\r\n                    onChange={handlePwdConfirmInput}\r\n                    value={confirmPwd}\r\n                    required\r\n                />\r\n                <button>Register Now</button>\r\n            </form>\r\n            <span>Already have an account? <Link to='/login'>Sign in.</Link></span>\r\n\r\n        </section>\r\n    )\r\n    return content;\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}