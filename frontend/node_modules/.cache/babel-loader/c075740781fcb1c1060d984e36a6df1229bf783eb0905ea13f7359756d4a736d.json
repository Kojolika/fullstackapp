{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Modules\\\\AddLocationOptions\\\\AddLocation.js\",\n  _s = $RefreshSig$();\nimport '../../Styles/addLocation.css';\nimport { useState } from 'react';\nimport AddLocationManual from './AddLocationManual';\nimport AddLocationCoordinates from './AddLocationCoordinates';\nimport AddLocationCurrentLocation from './AddLocationCurrentLocation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddLocation = props => {\n  _s();\n  const [addLocationManualMenu, setAddLocationManualMenu] = useState(false);\n  const [addLocationCoordinatesMenu, setAddLocationCoordinatesMenu] = useState(false);\n  const [addLocationCurrentLocationMenu, setAddLocationCurrentLocationMenu] = useState(false);\n  const [addLocationOptionsMenu, setAddLocationOptionsMenu] = useState(true);\n\n  //could refactor to a single function in the future\n  //need ability to get react component type ?\n  const toggleCloseManual = () => {\n    if (addLocationManualMenu === false) {\n      setAddLocationManualMenu(true);\n    } else {\n      setAddLocationManualMenu(false);\n    }\n  };\n  const toggleCloseCoordinates = () => {\n    if (addLocationCoordinatesMenu === false) {\n      setAddLocationCoordinatesMenu(true);\n    } else {\n      setAddLocationCoordinatesMenu(false);\n    }\n  };\n  const toggleCloseCurrentLocation = () => {\n    if (addLocationCurrentLocationMenu === false) {\n      setAddLocationCurrentLocationMenu(true);\n    } else {\n      setAddLocationCurrentLocationMenu(false);\n    }\n  };\n  const manualMenu = addLocationManualMenu ? /*#__PURE__*/_jsxDEV(AddLocationManual, {\n    toggleClose: toggleCloseManual\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const coordinatesMenu = addLocationCoordinatesMenu ? /*#__PURE__*/_jsxDEV(AddLocationCoordinates, {\n    toggleClose: toggleCloseCoordinates\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 56\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const currentLocationMenu = addLocationCurrentLocationMenu ? /*#__PURE__*/_jsxDEV(AddLocationCurrentLocation, {\n    toggleClose: toggleCloseCurrentLocation\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 64\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const addLocationOptionsButtons = addLocationOptionsMenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addLocationButton\",\n      onClick: () => toggleCloseCurrentLocation(),\n      children: \"Use my current location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addLocationButton\",\n      onClick: () => toggleCloseManual(),\n      children: \"Add by country/state/city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addLocationButton\",\n      onClick: () => toggleCloseCoordinates(),\n      children: \"Add by coordinates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addLocationBackButton\",\n      onClick: () => props.toggleClose(),\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addLocationMoodle\",\n    children: [manualMenu, coordinatesMenu, currentLocationMenu]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AddLocation, \"3USfF2xgXseOZWIuI4KU36vAYOI=\");\n_c = AddLocation;\nexport default AddLocation;\nvar _c;\n$RefreshReg$(_c, \"AddLocation\");","map":{"version":3,"names":["useState","AddLocationManual","AddLocationCoordinates","AddLocationCurrentLocation","AddLocation","props","addLocationManualMenu","setAddLocationManualMenu","addLocationCoordinatesMenu","setAddLocationCoordinatesMenu","addLocationCurrentLocationMenu","setAddLocationCurrentLocationMenu","addLocationOptionsMenu","setAddLocationOptionsMenu","toggleCloseManual","toggleCloseCoordinates","toggleCloseCurrentLocation","manualMenu","coordinatesMenu","currentLocationMenu","addLocationOptionsButtons","toggleClose"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Modules/AddLocationOptions/AddLocation.js"],"sourcesContent":["import '../../Styles/addLocation.css'\r\nimport { useState } from 'react'\r\n\r\nimport AddLocationManual from './AddLocationManual';\r\nimport AddLocationCoordinates from './AddLocationCoordinates';\r\nimport AddLocationCurrentLocation from './AddLocationCurrentLocation';\r\n\r\n\r\nconst AddLocation = (props) => {\r\n\r\n  const [addLocationManualMenu, setAddLocationManualMenu] = useState(false);\r\n  const [addLocationCoordinatesMenu, setAddLocationCoordinatesMenu] = useState(false);\r\n  const [addLocationCurrentLocationMenu, setAddLocationCurrentLocationMenu] = useState(false);\r\n  const [addLocationOptionsMenu, setAddLocationOptionsMenu] = useState(true);\r\n\r\n  //could refactor to a single function in the future\r\n  //need ability to get react component type ?\r\n  const toggleCloseManual = () =>\r\n  {\r\n    if(addLocationManualMenu === false){\r\n      setAddLocationManualMenu(true);\r\n    }\r\n    else{\r\n      setAddLocationManualMenu(false);\r\n    }\r\n  }\r\n\r\n  const toggleCloseCoordinates = () =>\r\n  {\r\n    if(addLocationCoordinatesMenu === false){\r\n      setAddLocationCoordinatesMenu(true);\r\n    }\r\n    else{\r\n      setAddLocationCoordinatesMenu(false);\r\n    }\r\n  }\r\n\r\n  const toggleCloseCurrentLocation = () =>\r\n  {\r\n    if(addLocationCurrentLocationMenu === false){\r\n      setAddLocationCurrentLocationMenu(true);\r\n    }\r\n    else{\r\n      setAddLocationCurrentLocationMenu(false);\r\n    }\r\n  } \r\n  \r\n  const manualMenu = addLocationManualMenu ? <AddLocationManual toggleClose={toggleCloseManual} /> : <></>;\r\n  const coordinatesMenu = addLocationCoordinatesMenu ? <AddLocationCoordinates toggleClose={toggleCloseCoordinates} /> : <></>;\r\n  const currentLocationMenu = addLocationCurrentLocationMenu ? <AddLocationCurrentLocation toggleClose={toggleCloseCurrentLocation}/> : <></>;\r\n\r\n  const addLocationOptionsButtons = addLocationOptionsMenu ?       \r\n  <div>\r\n  <button className='addLocationButton' onClick={() => toggleCloseCurrentLocation()}>Use my current location</button>\r\n  <br />\r\n  <button className='addLocationButton' onClick={() => toggleCloseManual()}>Add by country/state/city</button>\r\n  <br />\r\n  <button className='addLocationButton' onClick={() => toggleCloseCoordinates()}>Add by coordinates</button>\r\n  <br />\r\n  <button className='addLocationBackButton' onClick={() => props.toggleClose()}>Close</button>\r\n</div>\r\n: <></>;\r\n\r\n\r\n  return (\r\n    <div className=\"addLocationMoodle\">\r\n\r\n      {manualMenu}\r\n      {coordinatesMenu}\r\n      {currentLocationMenu}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddLocation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}