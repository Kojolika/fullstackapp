{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Atoms\\\\SettingsButton.js\",\n  _s = $RefreshSig$();\nimport { Settings, ToggleOff, ToggleOn } from \"../../Icons/svgImages/index\";\nimport { logOut, selectCurrentToken } from \"../../Features/auth/authSlice\";\nimport { selectTempUnit, selectTheme, setTempUnit, setTheme } from \"../../Features/user_preferences/preferenceSlice\";\nimport { useLogoutMutation } from \"../../Features/auth/authApiSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState, useRef } from \"react\";\nimport '../../Styles/settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SettingsButton = () => {\n  _s();\n  const accessToken = useSelector(selectCurrentToken);\n  const dispatch = useDispatch();\n  const [logout] = useLogoutMutation();\n  const [isOpen, setIsOpen] = useState(false);\n  const [degreeUnit, setDegreeUnit] = useState();\n  const [themeSetting, setThemeSetting] = useState();\n  const temp = useSelector(selectTempUnit);\n  const theme = useSelector(selectTheme);\n  useEffect(() => {\n    setDegreeUnit(temp);\n    setThemeSetting(theme);\n  }, []);\n  useEffect(() => {\n    dispatch(setTempUnit({\n      \"unit\": degreeUnit\n    }));\n  }, [degreeUnit]);\n  useEffect(() => {\n    dispatch(setTheme({\n      \"theme\": themeSetting\n    }));\n  }, [themeSetting]);\n  const handleLogout = async () => {\n    try {\n      const message = await logout({\n        accessToken\n      }).unwrap();\n      dispatch(logOut());\n      console.log(message);\n    } catch (err) {\n      console.log(err);\n      console.log(\"something went wrong\");\n    }\n  };\n  const toggleOpen = () => {\n    if (isOpen) setIsOpen(false);else setIsOpen(true);\n  };\n  const tempToggleIcon = degreeUnit === \"Celcius\" ? /*#__PURE__*/_jsxDEV(ToggleOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 55\n  }, this) : /*#__PURE__*/_jsxDEV(ToggleOff, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 70\n  }, this);\n  const themeToggleIcon = themeSetting === \"Light\" ? /*#__PURE__*/_jsxDEV(ToggleOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 56\n  }, this) : /*#__PURE__*/_jsxDEV(ToggleOff, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 71\n  }, this);\n  const handleClickTemp = () => {\n    if (degreeUnit === \"Celcius\") {\n      setDegreeUnit(\"Fahrenheit\");\n    } else {\n      setDegreeUnit(\"Celcius\");\n    }\n  };\n  const handleClickTheme = () => {\n    if (themeSetting === \"Light\") {\n      setThemeSetting(\"Dark\");\n    } else {\n      setThemeSetting(\"Light\");\n    }\n  };\n  const dropDown = isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-drop-down border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option\",\n      children: [\"\\xB0 Unit: \", temp, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: () => handleClickTemp(),\n        children: tempToggleIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option\",\n      children: [\"Theme: \", theme, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: () => handleClickTheme(),\n        children: themeToggleIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option icon-button\",\n      onClick: () => handleLogout(),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Settings, {\n      onClick: toggleOpen,\n      className: \"settings-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), dropDown]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 12\n  }, this);\n};\n_s(SettingsButton, \"i7+YZduGLfqua04fCvZiBuk0Y50=\", false, function () {\n  return [useSelector, useDispatch, useLogoutMutation, useSelector, useSelector];\n});\n_c = SettingsButton;\nexport default SettingsButton;\nvar _c;\n$RefreshReg$(_c, \"SettingsButton\");","map":{"version":3,"names":["Settings","ToggleOff","ToggleOn","logOut","selectCurrentToken","selectTempUnit","selectTheme","setTempUnit","setTheme","useLogoutMutation","useSelector","useDispatch","useEffect","useState","useRef","SettingsButton","accessToken","dispatch","logout","isOpen","setIsOpen","degreeUnit","setDegreeUnit","themeSetting","setThemeSetting","temp","theme","handleLogout","message","unwrap","console","log","err","toggleOpen","tempToggleIcon","themeToggleIcon","handleClickTemp","handleClickTheme","dropDown"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/SettingsButton.js"],"sourcesContent":["import { Settings, ToggleOff, ToggleOn } from \"../../Icons/svgImages/index\";\r\nimport { logOut, selectCurrentToken } from \"../../Features/auth/authSlice\";\r\nimport { selectTempUnit, selectTheme, setTempUnit, setTheme } from \"../../Features/user_preferences/preferenceSlice\";\r\nimport { useLogoutMutation } from \"../../Features/auth/authApiSlice\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nimport '../../Styles/settings.css';\r\n\r\nconst SettingsButton = () => {\r\n\r\n    const accessToken = useSelector(selectCurrentToken);\r\n    const dispatch = useDispatch();\r\n    const [logout] = useLogoutMutation();\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [degreeUnit, setDegreeUnit] = useState();\r\n    const [themeSetting, setThemeSetting] = useState();\r\n\r\n    const temp = useSelector(selectTempUnit);\r\n    const theme = useSelector(selectTheme);\r\n\r\n    useEffect(() => {\r\n        setDegreeUnit(temp);\r\n        setThemeSetting(theme);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setTempUnit({ \"unit\": degreeUnit }));\r\n    }, [degreeUnit])\r\n\r\n    useEffect(() => {\r\n        dispatch(setTheme({ \"theme\": themeSetting }));\r\n    }, [themeSetting])\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const message = await logout({ accessToken }).unwrap();\r\n            dispatch(logOut());\r\n            console.log(message);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            console.log(\"something went wrong\");\r\n        }\r\n    }\r\n    const toggleOpen = () => {\r\n        if (isOpen) setIsOpen(false);\r\n        else setIsOpen(true);\r\n    }\r\n    const tempToggleIcon = degreeUnit === \"Celcius\" ? <ToggleOn /> : <ToggleOff />;\r\n    const themeToggleIcon = themeSetting === \"Light\" ? <ToggleOn /> : <ToggleOff />;\r\n\r\n    const handleClickTemp = () => {\r\n        if (degreeUnit === \"Celcius\") {\r\n            setDegreeUnit(\"Fahrenheit\");\r\n        }\r\n        else {\r\n            setDegreeUnit(\"Celcius\");\r\n        }\r\n\r\n\r\n    }\r\n    const handleClickTheme = () => {\r\n        if (themeSetting === \"Light\") {\r\n            setThemeSetting(\"Dark\");\r\n        }\r\n        else {\r\n            setThemeSetting(\"Light\");\r\n        }\r\n\r\n    }\r\n\r\n    const dropDown = isOpen ? <div className=\"settings-drop-down border\">\r\n        <div className=\"settings-drop-down-option\"  >\r\n            Â° Unit: {temp}\r\n            <div className=\"icon-button\" onClick={() => handleClickTemp()}>{tempToggleIcon}</div>\r\n        </div>\r\n        <div className=\"settings-drop-down-option\" >\r\n            Theme: {theme}\r\n            <div className=\"icon-button\" onClick={() => handleClickTheme()}>\r\n                {themeToggleIcon}\r\n            </div>\r\n        </div>\r\n        <div className=\"settings-drop-down-option icon-button\" onClick={() => handleLogout()} >Logout</div>\r\n    </div> : <></>\r\n\r\n\r\n    return <div>\r\n        <Settings onClick={toggleOpen} className=\"settings-icon\" />\r\n        {dropDown}\r\n    </div>\r\n}\r\nexport default SettingsButton"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}