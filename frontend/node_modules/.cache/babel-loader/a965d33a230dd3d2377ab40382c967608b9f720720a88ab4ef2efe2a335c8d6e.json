{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst Time = props => {\n  _s();\n  const [meridiem, setMeridiem] = useState(''); //AM or PM\n\n  //Assumption is that props.number is a string in the form 'HH:MM' where HH is the hour and MM is the minute\n  const number = parseInt(props.number.slice(0, 2));\n  console.log(number);\n\n  //Offset is the offset number (+ or -) that converts this time from the UTC timezone to the local time\n  const offset = props.offset;\n  useEffect(() => {\n    //convert from military time on initial render\n    if (number > 12) setMeridiem('PM');else setMeridiem('AM');\n  }, []);\n  const regularTime = number > 12 ? number - 12 : number;\n  const offsetTime = (regularTime + offset) % 12;\n  const convertedTimeWithMeridiem = offsetTime + ' ' + meridiem;\n  console.log(convertedTimeWithMeridiem);\n  return convertedTimeWithMeridiem;\n};\n_s(Time, \"B3REF/dTUI12FSbaLiAqpuC+hb0=\");\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["useState","useEffect","Time","props","meridiem","setMeridiem","number","parseInt","slice","console","log","offset","regularTime","offsetTime","convertedTimeWithMeridiem"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/Time.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst Time = (props) => {\r\n    \r\n    const [meridiem, setMeridiem] = useState(''); //AM or PM\r\n\r\n    //Assumption is that props.number is a string in the form 'HH:MM' where HH is the hour and MM is the minute\r\n    const number = parseInt(props.number.slice(0, 2));\r\n\r\n    console.log(number);\r\n\r\n    //Offset is the offset number (+ or -) that converts this time from the UTC timezone to the local time\r\n    const offset = props.offset;\r\n\r\n    useEffect(() => {\r\n        //convert from military time on initial render\r\n        if (number > 12) setMeridiem('PM');\r\n        else setMeridiem('AM');\r\n    }, [])\r\n\r\n\r\n    const regularTime = number > 12 ? number - 12 : number;\r\n\r\n    const offsetTime = (regularTime + offset) % 12;\r\n\r\n    const convertedTimeWithMeridiem = offsetTime + ' ' + meridiem;\r\n\r\n    console.log(convertedTimeWithMeridiem);\r\n\r\n\r\n    return convertedTimeWithMeridiem;\r\n}\r\n\r\nexport default Time"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EAEpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMM,MAAM,GAAGC,QAAQ,CAACJ,KAAK,CAACG,MAAM,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAEjDC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;;EAEnB;EACA,MAAMK,MAAM,GAAGR,KAAK,CAACQ,MAAM;EAE3BV,SAAS,CAAC,MAAM;IACZ;IACA,IAAIK,MAAM,GAAG,EAAE,EAAED,WAAW,CAAC,IAAI,CAAC,CAAC,KAC9BA,WAAW,CAAC,IAAI,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMO,WAAW,GAAGN,MAAM,GAAG,EAAE,GAAGA,MAAM,GAAG,EAAE,GAAGA,MAAM;EAEtD,MAAMO,UAAU,GAAG,CAACD,WAAW,GAAGD,MAAM,IAAI,EAAE;EAE9C,MAAMG,yBAAyB,GAAGD,UAAU,GAAG,GAAG,GAAGT,QAAQ;EAE7DK,OAAO,CAACC,GAAG,CAACI,yBAAyB,CAAC;EAGtC,OAAOA,yBAAyB;AACpC,CAAC;AAAA,GA7BKZ,IAAI;AAAA,KAAJA,IAAI;AA+BV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}