{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Modules\\\\SettingsButton.js\",\n  _s = $RefreshSig$();\nimport { Settings, ToggleOff, ToggleOn } from \"../../Icons/svgImages/index\";\nimport { logOut, selectCurrentToken } from \"../../Features/auth/authSlice\";\nimport { selectTempUnit, selectTheme, setTempUnit, setTheme } from \"../../Features/user_preferences/preferenceSlice\";\nimport { useLogoutMutation } from \"../../Features/auth/authApiSlice\";\nimport useOutsideClick from \"../../app/hooks/useOutsideClick\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../../Styles/settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SettingsButton = () => {\n  _s();\n  const accessToken = useSelector(selectCurrentToken);\n  const dispatch = useDispatch();\n  const [logout] = useLogoutMutation();\n  const [isOpen, setIsOpen] = useState(false);\n  const [degreeUnit, setDegreeUnit] = useState();\n  const [themeSetting, setThemeSetting] = useState();\n  const settingsDropDownRef = useRef();\n  const temp = useSelector(selectTempUnit);\n  const theme = useSelector(selectTheme);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setDegreeUnit(temp);\n    setThemeSetting(theme);\n  }, []);\n  useEffect(() => {\n    dispatch(setTempUnit({\n      \"unit\": degreeUnit\n    }));\n  }, [degreeUnit]);\n  useEffect(() => {\n    dispatch(setTheme({\n      \"theme\": themeSetting\n    }));\n  }, [themeSetting]);\n  const handleLogout = async () => {\n    try {\n      const message = await logout({\n        accessToken\n      }).unwrap();\n      dispatch(logOut());\n      console.log(message);\n    } catch (err) {\n      console.log(err);\n      console.log(\"something went wrong\");\n    }\n  };\n  const toggleOpen = () => {\n    if (isOpen) setIsOpen(false);else setIsOpen(true);\n  };\n  const handleClickTemp = () => {\n    if (degreeUnit === \"Celcius\") {\n      setDegreeUnit(\"Fahrenheit\");\n    } else {\n      setDegreeUnit(\"Celcius\");\n    }\n  };\n  const handleClickTheme = () => {\n    if (themeSetting === \"Light\") {\n      setThemeSetting(\"Dark\");\n    } else {\n      setThemeSetting(\"Light\");\n    }\n  };\n  useOutsideClick(settingsDropDownRef, () => {\n    setIsOpen(false);\n  });\n  const dropDown = isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-drop-down border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option\",\n      children: [\"\\xB0 Unit: \", temp, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: () => handleClickTemp(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-pointer-events\",\n          children: degreeUnit === \"Celcius\" ? /*#__PURE__*/_jsxDEV(ToggleOn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 84\n          }, this) : /*#__PURE__*/_jsxDEV(ToggleOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 99\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option\",\n      children: [\"Theme: \", theme, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: () => handleClickTheme(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-pointer-events\",\n          children: themeSetting === \"Light\" ? /*#__PURE__*/_jsxDEV(ToggleOn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 84\n          }, this) : /*#__PURE__*/_jsxDEV(ToggleOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 99\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option icon-button\",\n      onClick: () => handleLogout(),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: settingsDropDownRef,\n    children: [/*#__PURE__*/_jsxDEV(Settings, {\n      onClick: toggleOpen,\n      className: \"settings-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), dropDown]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(SettingsButton, \"D46I+lCaecpSBg8IhL4nxrHrWss=\", false, function () {\n  return [useSelector, useDispatch, useLogoutMutation, useSelector, useSelector, useNavigate, useOutsideClick];\n});\n_c = SettingsButton;\nexport default SettingsButton;\nvar _c;\n$RefreshReg$(_c, \"SettingsButton\");","map":{"version":3,"names":["Settings","ToggleOff","ToggleOn","logOut","selectCurrentToken","selectTempUnit","selectTheme","setTempUnit","setTheme","useLogoutMutation","useOutsideClick","useSelector","useDispatch","useEffect","useState","useRef","useNavigate","SettingsButton","accessToken","dispatch","logout","isOpen","setIsOpen","degreeUnit","setDegreeUnit","themeSetting","setThemeSetting","settingsDropDownRef","temp","theme","navigate","handleLogout","message","unwrap","console","log","err","toggleOpen","handleClickTemp","handleClickTheme","dropDown"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Modules/SettingsButton.js"],"sourcesContent":["import { Settings, ToggleOff, ToggleOn } from \"../../Icons/svgImages/index\";\r\nimport { logOut, selectCurrentToken } from \"../../Features/auth/authSlice\";\r\nimport { selectTempUnit, selectTheme, setTempUnit, setTheme } from \"../../Features/user_preferences/preferenceSlice\";\r\nimport { useLogoutMutation } from \"../../Features/auth/authApiSlice\";\r\n\r\nimport useOutsideClick from \"../../app/hooks/useOutsideClick\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport '../../Styles/settings.css';\r\n\r\nconst SettingsButton = () => {\r\n\r\n    const accessToken = useSelector(selectCurrentToken);\r\n    const dispatch = useDispatch();\r\n    const [logout] = useLogoutMutation();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [degreeUnit, setDegreeUnit] = useState();\r\n    const [themeSetting, setThemeSetting] = useState();\r\n    const settingsDropDownRef = useRef();\r\n\r\n    const temp = useSelector(selectTempUnit);\r\n    const theme = useSelector(selectTheme);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setDegreeUnit(temp);\r\n        setThemeSetting(theme);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setTempUnit({ \"unit\": degreeUnit }));\r\n    }, [degreeUnit])\r\n\r\n    useEffect(() => {\r\n        dispatch(setTheme({ \"theme\": themeSetting }));\r\n    }, [themeSetting])\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const message = await logout({ accessToken }).unwrap();\r\n            dispatch(logOut());\r\n            \r\n            console.log(message);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            console.log(\"something went wrong\");\r\n        }\r\n    }\r\n    const toggleOpen = () => {\r\n        if (isOpen) setIsOpen(false);\r\n        else setIsOpen(true);\r\n    }\r\n\r\n    const handleClickTemp = () => {\r\n        if (degreeUnit === \"Celcius\") {\r\n            setDegreeUnit(\"Fahrenheit\");\r\n        }\r\n        else {\r\n            setDegreeUnit(\"Celcius\");\r\n        }\r\n    }\r\n    const handleClickTheme = () => {\r\n        if (themeSetting === \"Light\") {\r\n            setThemeSetting(\"Dark\");\r\n        }\r\n        else {\r\n            setThemeSetting(\"Light\");\r\n        }\r\n    }\r\n\r\n    useOutsideClick(settingsDropDownRef, () => {\r\n        setIsOpen(false);\r\n    })\r\n\r\n    const dropDown = isOpen ?\r\n        <div className=\"settings-drop-down border\" >\r\n            <div className=\"settings-drop-down-option\">\r\n                Â° Unit: {temp}\r\n                <div className=\"icon-button\" onClick={() => handleClickTemp()}>\r\n                    <div className=\"no-pointer-events\">{degreeUnit === \"Celcius\" ? <ToggleOn /> : <ToggleOff />}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"settings-drop-down-option\">\r\n                Theme: {theme}\r\n                <div className=\"icon-button\" onClick={() => handleClickTheme()}>\r\n                    <div className=\"no-pointer-events\">{themeSetting === \"Light\" ? <ToggleOn /> : <ToggleOff />}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"settings-drop-down-option icon-button\" onClick={() => handleLogout()} >Logout</div>\r\n        </div> \r\n        : <></>\r\n\r\n    return (\r\n        <div ref={settingsDropDownRef}>\r\n            <Settings onClick={toggleOpen} className=\"settings-icon\" />\r\n            {dropDown}\r\n        </div>\r\n    )\r\n}\r\nexport default SettingsButton"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}