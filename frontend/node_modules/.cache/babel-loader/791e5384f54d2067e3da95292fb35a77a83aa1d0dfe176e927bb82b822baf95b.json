{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Locations.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectAllLocations, setCurrentLocation } from \"../../Features/locations/locationsSlice\";\nimport LocationWidget from \"../Modules/LocationWidget\";\nimport '../../Styles/locations.css';\nimport '../../Styles/app.css';\nimport { Delete } from \"../../Icons/svgImages/index.js\";\nimport { useDeleteUserLocationsMutation } from \"../../Features/locations/locationsApiSlice\";\nimport { selectCurrentUser } from \"../../Features/auth/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOOLBAR_STATE = {\n  NONE: 'NONE',\n  DELETING: 'DELETING'\n};\nconst Locations = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userLocations = useSelector(selectAllLocations);\n  const locations = userLocations ? userLocations : [];\n  const [toolbarState, setToolbarState] = useState(TOOLBAR_STATE.NONE);\n  const toggleDeleting = () => {\n    if (toolbarState === TOOLBAR_STATE.DELETING) setToolbarState(TOOLBAR_STATE.NONE);else setToolbarState(TOOLBAR_STATE.DELETING);\n  };\n  const deleteLocationButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: toolbarState === TOOLBAR_STATE.DELETING ? \"optionsButtons button-selected\" : \"optionsButtons\",\n    onClick: () => toggleDeleting(),\n    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 178\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 34\n  }, this);\n  const [markedForDeletionList, setMarkedForDeletionList] = useState([]);\n  const addLocationToMarkedForDeletionList = id => {\n    const newList = [...markedForDeletionList, id];\n    setMarkedForDeletionList(newList);\n  };\n  const removeLocationFromMarkedForDeletionList = id => {\n    const index = markedForDeletionList.indexOf(id);\n    if (index > -1) {\n      // only splice array when item is found\n      const markedForDeletionListCopy = markedForDeletionList;\n      const newArray1 = markedForDeletionListCopy.filter(item => item !== id);\n      setMarkedForDeletionList(newArray1);\n    }\n  };\n  const user = useSelector(selectCurrentUser);\n  const [deleteLocationFromBackendDB, {\n    isLoading: isLoadingDeletingLocationFromDatabase\n  }] = useDeleteUserLocationsMutation();\n  const handleLocationDeletion = async () => {\n    try {\n      //send backend request\n      //ids need not be a list, backend can still process the request \n      await deleteLocationFromBackendDB({\n        username: user,\n        ids: locationBeingDisplayed.id\n      }).unwrap();\n\n      //set application logic\n      dispatch(deleteLocations({\n        ids: [locationBeingDisplayed.id]\n      }));\n\n      //calling both in the same try block ensures server and frontend state sync\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const confirmDeletionButton = markedForDeletionList.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirm-location-delete alert-message\",\n    onClick: () => handleLocationDeletion(),\n    children: markedForDeletionList.length === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Confirm Remove Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Confirm Remove \", markedForDeletionList.length, \" locations\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 90\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  useEffect(() => {\n    setMarkedForDeletionList([]);\n  }, [toolbarState]);\n  const handleLocationClick = location => {\n    dispatch(setCurrentLocation({\n      ...location\n    }));\n    navigate('/location');\n  };\n\n  //if locations is being loaded still, just displaying loading text\n  //otherwise if locations is empty, display text to tell the user to add a location\n  //otherwise display all locations that the user has\n  const renderedLocations = locations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Add a location to get started\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }, this) : locations.map(location => /*#__PURE__*/_jsxDEV(LocationWidget, {\n    className: \"location\",\n    location: location,\n    toolbarState: toolbarState,\n    addLocationToMarkedForDeletionList: addLocationToMarkedForDeletionList,\n    removeLocationFromMarkedForDeletionList: removeLocationFromMarkedForDeletionList,\n    onClick: handleLocationClick\n  }, location.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 17\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"locationsMainPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"locationsContainer\",\n      children: [confirmDeletionButton, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locationsOptionsArea border\",\n        children: deleteLocationButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locationsList\",\n        children: renderedLocations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Locations, \"LAbBiOxRC/IpRDdkB8HOlDhh0zM=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useDeleteUserLocationsMutation];\n});\n_c = Locations;\nexport { TOOLBAR_STATE };\nexport default Locations;\nvar _c;\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useState","useNavigate","selectAllLocations","setCurrentLocation","LocationWidget","Delete","useDeleteUserLocationsMutation","selectCurrentUser","TOOLBAR_STATE","NONE","DELETING","Locations","dispatch","navigate","userLocations","locations","toolbarState","setToolbarState","toggleDeleting","deleteLocationButton","markedForDeletionList","setMarkedForDeletionList","addLocationToMarkedForDeletionList","id","newList","removeLocationFromMarkedForDeletionList","index","indexOf","markedForDeletionListCopy","newArray1","filter","item","user","deleteLocationFromBackendDB","isLoading","isLoadingDeletingLocationFromDatabase","handleLocationDeletion","username","ids","locationBeingDisplayed","unwrap","deleteLocations","error","console","log","confirmDeletionButton","length","handleLocationClick","location","renderedLocations","map"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Pages/Locations.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { selectAllLocations, setCurrentLocation } from \"../../Features/locations/locationsSlice\";\r\n\r\nimport LocationWidget from \"../Modules/LocationWidget\";\r\n\r\nimport '../../Styles/locations.css';\r\nimport '../../Styles/app.css';\r\n\r\nimport { Delete } from \"../../Icons/svgImages/index.js\";\r\nimport { useDeleteUserLocationsMutation } from \"../../Features/locations/locationsApiSlice\";\r\nimport { selectCurrentUser } from \"../../Features/auth/authSlice\";\r\n\r\n\r\nconst TOOLBAR_STATE = {\r\n    NONE: 'NONE',\r\n    DELETING: 'DELETING'\r\n}\r\n\r\n\r\nconst Locations = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const userLocations = useSelector(selectAllLocations);\r\n    const locations = userLocations ? userLocations : [];\r\n\r\n    const [toolbarState, setToolbarState] = useState(TOOLBAR_STATE.NONE);\r\n\r\n    const toggleDeleting = () => {\r\n        if (toolbarState === TOOLBAR_STATE.DELETING) setToolbarState(TOOLBAR_STATE.NONE)\r\n        else setToolbarState(TOOLBAR_STATE.DELETING)\r\n    }\r\n    const deleteLocationButton = <div className={toolbarState === TOOLBAR_STATE.DELETING ? \"optionsButtons button-selected\" : \"optionsButtons\"} onClick={() => toggleDeleting()}><Delete /></div>\r\n\r\n    const [markedForDeletionList, setMarkedForDeletionList] = useState([]);\r\n    const addLocationToMarkedForDeletionList = id => {\r\n        const newList = [...markedForDeletionList, id]\r\n        setMarkedForDeletionList(newList);\r\n    }\r\n    const removeLocationFromMarkedForDeletionList = id => {\r\n        const index = markedForDeletionList.indexOf(id);\r\n        if (index > -1) { // only splice array when item is found\r\n            const markedForDeletionListCopy = markedForDeletionList;\r\n            const newArray1 = markedForDeletionListCopy.filter(item => item !== id)\r\n            setMarkedForDeletionList(newArray1);\r\n        }\r\n    }\r\n\r\n    const user = useSelector(selectCurrentUser);\r\n    const [deleteLocationFromBackendDB, {isLoading: isLoadingDeletingLocationFromDatabase}] = useDeleteUserLocationsMutation()\r\n    const handleLocationDeletion = async () => {\r\n        try {\r\n            //send backend request\r\n            //ids need not be a list, backend can still process the request \r\n            await deleteLocationFromBackendDB({username: user, ids: locationBeingDisplayed.id}).unwrap();\r\n\r\n            //set application logic\r\n            dispatch(deleteLocations({ids:[locationBeingDisplayed.id]}));\r\n\r\n            //calling both in the same try block ensures server and frontend state sync\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const confirmDeletionButton = markedForDeletionList.length !== 0 ?\r\n        <div className=\"confirm-location-delete alert-message\" onClick={() => handleLocationDeletion()}>\r\n            {markedForDeletionList.length === 1 ? <span>Confirm Remove Location</span> : <span>Confirm Remove {markedForDeletionList.length} locations</span>}\r\n        </div>\r\n        : <></>;\r\n\r\n    useEffect(() => {\r\n        setMarkedForDeletionList([]);\r\n    }, [toolbarState])\r\n\r\n    const handleLocationClick = (location) => {\r\n        dispatch(setCurrentLocation({...location}));\r\n        navigate('/location');\r\n    }\r\n\r\n    //if locations is being loaded still, just displaying loading text\r\n    //otherwise if locations is empty, display text to tell the user to add a location\r\n    //otherwise display all locations that the user has\r\n    const renderedLocations = locations.length === 0 ?\r\n            <div>Add a location to get started</div>\r\n            : locations.map(location =>\r\n                <LocationWidget\r\n                    className=\"location\"\r\n                    key={location.id}\r\n                    location={location}\r\n                    toolbarState={toolbarState}\r\n                    addLocationToMarkedForDeletionList={addLocationToMarkedForDeletionList}\r\n                    removeLocationFromMarkedForDeletionList={removeLocationFromMarkedForDeletionList}\r\n                    onClick={handleLocationClick}\r\n                />)\r\n\r\n    return (\r\n        <div className=\"locationsMainPage\">\r\n            <div className=\"locationsContainer\">\r\n                {confirmDeletionButton}\r\n                <div className=\"locationsOptionsArea border\">\r\n                    {deleteLocationButton}\r\n                </div>\r\n                <div className=\"locationsList\">\r\n                    {renderedLocations}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport { TOOLBAR_STATE }\r\nexport default Locations;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}