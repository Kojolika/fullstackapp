{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Atoms\\\\SettingsButton.js\",\n  _s = $RefreshSig$();\nimport { Settings } from \"../../Icons/svgImages/index\";\nimport { logOut, selectCurrentToken } from \"../../Features/auth/authSlice\";\nimport { selectTempUnit, selectTheme } from \"../../Features/user_preferences/preferenceSlice\";\nimport { useLogoutMutation } from \"../../Features/auth/authApiSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport '../../Styles/settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SettingsButton = () => {\n  _s();\n  const accessToken = useSelector(selectCurrentToken);\n  const dispatch = useDispatch();\n  const [logout] = useLogoutMutation();\n  const [isOpen, setIsOpen] = useState(false);\n  const temp = useSelector(selectTempUnit);\n  const theme = useSelector(selectTheme);\n  const handleLogout = async () => {\n    try {\n      const message = await logout({\n        accessToken\n      }).unwrap();\n      dispatch(logOut());\n      console.log(message);\n    } catch (err) {\n      console.log(err);\n      console.log(\"something went wrong\");\n    }\n  };\n  const toggleOpen = () => {\n    if (isOpen) setIsOpen(false);else setIsOpen(true);\n  };\n  const logoutButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-drop-down-option\",\n    onClick: () => handleLogout(),\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 26\n  }, this);\n  const dropDown = isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-drop-down border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option\",\n      children: temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-drop-down-option\",\n      children: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), logoutButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => toggleOpen(),\n    children: [/*#__PURE__*/_jsxDEV(Settings, {\n      className: \"settings-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), dropDown]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n_s(SettingsButton, \"KIHDc5q8rzNdW3SpVg8BVY37xF4=\", false, function () {\n  return [useSelector, useDispatch, useLogoutMutation, useSelector, useSelector];\n});\n_c = SettingsButton;\nexport default SettingsButton;\nvar _c;\n$RefreshReg$(_c, \"SettingsButton\");","map":{"version":3,"names":["Settings","logOut","selectCurrentToken","selectTempUnit","selectTheme","useLogoutMutation","useSelector","useDispatch","useState","SettingsButton","accessToken","dispatch","logout","isOpen","setIsOpen","temp","theme","handleLogout","message","unwrap","console","log","err","toggleOpen","logoutButton","dropDown"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/SettingsButton.js"],"sourcesContent":["import { Settings } from \"../../Icons/svgImages/index\";\r\nimport { logOut,selectCurrentToken } from \"../../Features/auth/authSlice\";\r\nimport { selectTempUnit, selectTheme } from \"../../Features/user_preferences/preferenceSlice\";\r\nimport { useLogoutMutation } from \"../../Features/auth/authApiSlice\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport '../../Styles/settings.css';\r\n\r\nconst SettingsButton = () => {\r\n\r\n    const accessToken = useSelector(selectCurrentToken);\r\n    const dispatch = useDispatch();\r\n    const [logout] = useLogoutMutation();\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const temp = useSelector(selectTempUnit);\r\n    const theme = useSelector(selectTheme);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n          const message = await logout({ accessToken }).unwrap();\r\n          dispatch(logOut());\r\n          console.log(message);\r\n        }\r\n        catch (err) {\r\n          console.log(err);\r\n          console.log(\"something went wrong\");\r\n        }\r\n    }\r\n    const toggleOpen = () =>{\r\n        if(isOpen) setIsOpen(false);\r\n        else setIsOpen(true);\r\n    }\r\n\r\n    const logoutButton = <div className=\"settings-drop-down-option\" onClick={() => handleLogout()} >Logout</div>\r\n    \r\n    const dropDown = isOpen ? <div className=\"settings-drop-down border\">\r\n        <div className=\"settings-drop-down-option\" >{temp}</div>\r\n        <div className=\"settings-drop-down-option\">{theme}</div>\r\n        {logoutButton}\r\n    </div> : <></>\r\n\r\n\r\n    return <div onClick={()=>toggleOpen()}>\r\n        <Settings className=\"settings-icon\" />\r\n        {dropDown}\r\n    </div>\r\n}\r\nexport default SettingsButton"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,MAAM,EAACC,kBAAkB,QAAQ,+BAA+B;AACzE,SAASC,cAAc,EAAEC,WAAW,QAAQ,iDAAiD;AAC7F,SAASC,iBAAiB,QAAQ,kCAAkC;AAEpE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,2BAA2B;AAAC;AAAA;AAEnC,MAAMC,cAAc,GAAG,MAAM;EAAA;EAEzB,MAAMC,WAAW,GAAGJ,WAAW,CAACJ,kBAAkB,CAAC;EACnD,MAAMS,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM,CAACK,MAAM,CAAC,GAAGP,iBAAiB,EAAE;EAEpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,IAAI,GAAGT,WAAW,CAACH,cAAc,CAAC;EACxC,MAAMa,KAAK,GAAGV,WAAW,CAACF,WAAW,CAAC;EAEtC,MAAMa,YAAY,GAAG,YAAY;IAC7B,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMN,MAAM,CAAC;QAAEF;MAAY,CAAC,CAAC,CAACS,MAAM,EAAE;MACtDR,QAAQ,CAACV,MAAM,EAAE,CAAC;MAClBmB,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACtB,CAAC,CACD,OAAOI,GAAG,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAChBF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC;EACJ,CAAC;EACD,MAAME,UAAU,GAAG,MAAK;IACpB,IAAGV,MAAM,EAAEC,SAAS,CAAC,KAAK,CAAC,CAAC,KACvBA,SAAS,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMU,YAAY,gBAAG;IAAK,SAAS,EAAC,2BAA2B;IAAC,OAAO,EAAE,MAAMP,YAAY,EAAG;IAAA,UAAE;EAAM;IAAA;IAAA;IAAA;EAAA,QAAM;EAE5G,MAAMQ,QAAQ,GAAGZ,MAAM,gBAAG;IAAK,SAAS,EAAC,2BAA2B;IAAA,wBAChE;MAAK,SAAS,EAAC,2BAA2B;MAAA,UAAGE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO,eACxD;MAAK,SAAS,EAAC,2BAA2B;MAAA,UAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,EACvDQ,YAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QACX,gBAAG,qCAAK;EAGd,oBAAO;IAAK,OAAO,EAAE,MAAID,UAAU,EAAG;IAAA,wBAClC,QAAC,QAAQ;MAAC,SAAS,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,EACrCE,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AACV,CAAC;AAAA,GAxCKhB,cAAc;EAAA,QAEIH,WAAW,EACdC,WAAW,EACXF,iBAAiB,EAIrBC,WAAW,EACVA,WAAW;AAAA;AAAA,KATvBG,cAAc;AAyCpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}