{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Modules\\\\LocationWidget.js\",\n  _s = $RefreshSig$();\nimport '../../Styles/locations.css';\nimport '../../Styles/app.css';\nimport { useState, useEffect } from 'react';\nimport { ThreeDots, CheckBoxChecked, CheckBoxUnchecked } from '../../Icons/svgImages/index.js';\nimport { TOOLBAR_STATE } from '../Pages/Locations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LocationWidget = props => {\n  _s();\n  const country = props.location.country.name;\n  const province = props.location.province.name;\n  const city = props.location.city.name;\n  const latitude = props.location.latitude;\n  const longitude = props.location.longitude;\n  const [isMarkedForDeletion, setIsMarkedForDeletion] = useState(false);\n  const handleCheckBoxClick = () => {\n    if (isMarkedForDeletion) {\n      props.removeLocationFromMarkedForDeletionList(props.location.id);\n    } else {\n      props.addLocationToMarkedForDeletionList(props.location.id);\n    }\n    setIsMarkedForDeletion(!isMarkedForDeletion);\n  };\n\n  //reset to unmarked when leaving deleting state\n  useEffect(() => {\n    setIsMarkedForDeletion(false);\n  }, [props.toolbarState]);\n  const icon = isMarkedForDeletion ? /*#__PURE__*/_jsxDEV(CheckBoxChecked, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 40\n  }, this) : /*#__PURE__*/_jsxDEV(CheckBoxUnchecked, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 62\n  }, this);\n  const checkBox = props.toolbarState === TOOLBAR_STATE.DELETING ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isMarkedForDeletion ? \"optionsButtons deletion-selected\" : \"optionsButtons\",\n    onClick: () => handleCheckBoxClick(),\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 70\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const handleClick = () => {\n    if (props.toolbarState === TOOLBAR_STATE.DELETING) {\n      handleCheckBoxClick();\n    } else {\n      props.onClick(props.location);\n    }\n  };\n  const location = /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"location border\",\n    onClick: () => handleClick(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-position\",\n      children: checkBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [city === null ? latitude : city, \", \", province === null ? longitude : province, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), country ? country : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 22\n  }, this);\n  return location;\n};\n_s(LocationWidget, \"ctNAxPeKWGaJlKM8hDN4U3Xhj6s=\");\n_c = LocationWidget;\nexport default LocationWidget;\nvar _c;\n$RefreshReg$(_c, \"LocationWidget\");","map":{"version":3,"names":["useState","useEffect","ThreeDots","CheckBoxChecked","CheckBoxUnchecked","TOOLBAR_STATE","LocationWidget","props","country","location","name","province","city","latitude","longitude","isMarkedForDeletion","setIsMarkedForDeletion","handleCheckBoxClick","removeLocationFromMarkedForDeletionList","id","addLocationToMarkedForDeletionList","toolbarState","icon","checkBox","DELETING","handleClick","onClick"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Modules/LocationWidget.js"],"sourcesContent":["import '../../Styles/locations.css';\r\nimport '../../Styles/app.css';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { ThreeDots, CheckBoxChecked, CheckBoxUnchecked } from '../../Icons/svgImages/index.js';\r\n\r\nimport { TOOLBAR_STATE } from '../Pages/Locations';\r\n\r\nconst LocationWidget = (props) => {\r\n\r\n    const country = props.location.country.name;\r\n    const province = props.location.province.name;\r\n    const city = props.location.city.name;\r\n    const latitude = props.location.latitude;\r\n    const longitude = props.location.longitude;\r\n\r\n    const [isMarkedForDeletion, setIsMarkedForDeletion] = useState(false);\r\n    const handleCheckBoxClick = () => {\r\n        if (isMarkedForDeletion) {\r\n            props.removeLocationFromMarkedForDeletionList(props.location.id)\r\n        } else {\r\n            props.addLocationToMarkedForDeletionList(props.location.id);\r\n        }\r\n        setIsMarkedForDeletion(!isMarkedForDeletion);\r\n    }\r\n\r\n    //reset to unmarked when leaving deleting state\r\n    useEffect(() => {\r\n        setIsMarkedForDeletion(false);\r\n    }, [props.toolbarState])\r\n\r\n    const icon = isMarkedForDeletion ? <CheckBoxChecked /> : <CheckBoxUnchecked />;\r\n    const checkBox = props.toolbarState === TOOLBAR_STATE.DELETING ? <div className={isMarkedForDeletion ? \"optionsButtons deletion-selected\" : \"optionsButtons\"} onClick={() => handleCheckBoxClick()} >{icon}</div> : <></>\r\n\r\n    const handleClick = () => {\r\n        if (props.toolbarState === TOOLBAR_STATE.DELETING) {\r\n            handleCheckBoxClick();\r\n        }\r\n        else {\r\n            props.onClick(props.location);\r\n        }\r\n    }\r\n\r\n    const location = <article className=\"location border\" onClick={() => handleClick()}>\r\n        <div className='checkbox-position'>\r\n            {checkBox}\r\n        </div>\r\n        <h2>\r\n            {city === null ? latitude : city}, {province === null ? longitude : province}\r\n            <br />\r\n            {country ? country : <></>}\r\n        </h2>\r\n    </article>\r\n\r\n    return location;\r\n}\r\n\r\nexport default LocationWidget"],"mappings":";;AAAA,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAE7B,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,SAAS,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,gCAAgC;AAE9F,SAASC,aAAa,QAAQ,oBAAoB;AAAC;AAAA;AAEnD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAE9B,MAAMC,OAAO,GAAGD,KAAK,CAACE,QAAQ,CAACD,OAAO,CAACE,IAAI;EAC3C,MAAMC,QAAQ,GAAGJ,KAAK,CAACE,QAAQ,CAACE,QAAQ,CAACD,IAAI;EAC7C,MAAME,IAAI,GAAGL,KAAK,CAACE,QAAQ,CAACG,IAAI,CAACF,IAAI;EACrC,MAAMG,QAAQ,GAAGN,KAAK,CAACE,QAAQ,CAACI,QAAQ;EACxC,MAAMC,SAAS,GAAGP,KAAK,CAACE,QAAQ,CAACK,SAAS;EAE1C,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAMiB,mBAAmB,GAAG,MAAM;IAC9B,IAAIF,mBAAmB,EAAE;MACrBR,KAAK,CAACW,uCAAuC,CAACX,KAAK,CAACE,QAAQ,CAACU,EAAE,CAAC;IACpE,CAAC,MAAM;MACHZ,KAAK,CAACa,kCAAkC,CAACb,KAAK,CAACE,QAAQ,CAACU,EAAE,CAAC;IAC/D;IACAH,sBAAsB,CAAC,CAACD,mBAAmB,CAAC;EAChD,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACZe,sBAAsB,CAAC,KAAK,CAAC;EACjC,CAAC,EAAE,CAACT,KAAK,CAACc,YAAY,CAAC,CAAC;EAExB,MAAMC,IAAI,GAAGP,mBAAmB,gBAAG,QAAC,eAAe;IAAA;IAAA;IAAA;EAAA,QAAG,gBAAG,QAAC,iBAAiB;IAAA;IAAA;IAAA;EAAA,QAAG;EAC9E,MAAMQ,QAAQ,GAAGhB,KAAK,CAACc,YAAY,KAAKhB,aAAa,CAACmB,QAAQ,gBAAG;IAAK,SAAS,EAAET,mBAAmB,GAAG,kCAAkC,GAAG,gBAAiB;IAAC,OAAO,EAAE,MAAME,mBAAmB,EAAG;IAAA,UAAGK;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO,gBAAG,qCAAK;EAEzN,MAAMG,WAAW,GAAG,MAAM;IACtB,IAAIlB,KAAK,CAACc,YAAY,KAAKhB,aAAa,CAACmB,QAAQ,EAAE;MAC/CP,mBAAmB,EAAE;IACzB,CAAC,MACI;MACDV,KAAK,CAACmB,OAAO,CAACnB,KAAK,CAACE,QAAQ,CAAC;IACjC;EACJ,CAAC;EAED,MAAMA,QAAQ,gBAAG;IAAS,SAAS,EAAC,iBAAiB;IAAC,OAAO,EAAE,MAAMgB,WAAW,EAAG;IAAA,wBAC/E;MAAK,SAAS,EAAC,mBAAmB;MAAA,UAC7BF;IAAQ;MAAA;MAAA;MAAA;IAAA,QACP,eACN;MAAA,WACKX,IAAI,KAAK,IAAI,GAAGC,QAAQ,GAAGD,IAAI,EAAC,IAAE,EAACD,QAAQ,KAAK,IAAI,GAAGG,SAAS,GAAGH,QAAQ,eAC5E;QAAA;QAAA;QAAA;MAAA,QAAM,EACLH,OAAO,GAAGA,OAAO,gBAAG,qCAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;EAEV,OAAOC,QAAQ;AACnB,CAAC;AAAA,GA/CKH,cAAc;AAAA,KAAdA,cAAc;AAiDpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}