{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Pages\\\\LocationData.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { addLocation, selectAllLocations, selectCurrentLocation, setCurrentLocation } from \"../../Features/locations/locationsSlice\";\nimport { useGetCityWeatherDataQuery } from \"../../Features/locations/airVisualApiSlice\";\nimport { useGetDailyForecast5DaysQuery, useGetHourlyForecast12HoursQuery, useGetLocationKeyQuery } from \"../../Features/locations/accuWeatherApiSlice\";\nimport '../../Styles/location.css';\nimport '../../Styles/app.css';\nimport { StarBorder, StarFilled, ArrowLeft, ArrowRight, Sunglasses, North, Info } from \"../../Icons/svgImages/index.js\";\nimport { selectCurrentUser } from \"../../Features/auth/authSlice\";\nimport { selectTempUnit } from \"../../Features/user_preferences/preferenceSlice\";\nimport Temperature from \"../Atoms/Temperature\";\nimport WeatherIcon from \"../Atoms/WeatherIcon\";\nimport { WaterDrop } from \"../../Icons/svgImages/Weather Icons\";\nimport Month from \"../Atoms/Month\";\nimport Time from \"../Atoms/Time\";\nimport AirQuality from \"../Atoms/AirQuality\";\nimport Wind from \"../Atoms/Wind\";\nimport ToolTip from \"../Atoms/ToolTip\";\nimport { useAddUserLocationMutation } from \"../../Features/auth/authApiSlice\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationData = () => {\n  _s();\n  var _locationBeingDisplay, _currentDataAirVisual, _currentDataAirVisual2, _currentDataAirVisual3, _currentDataCityData$, _currentDataCityData$2, _currentDataAirVisual4, _currentDataAirVisual5, _currentDataAirVisual6, _currentDataAirVisual7, _currentDataAirVisual8, _currentDataAirVisual9, _currentDataAirVisual10, _currentDataAirVisual11, _currentDataAirVisual12, _twelveHourForecastAr, _twelveHourForecastAr2, _twelveHourForecastAr3, _currentDataAirVisual13, _currentDataAirVisual14, _currentDataAirVisual15, _currentDataAirVisual16, _currentDataAirVisual17, _currentDataAirVisual18, _currentDataAirVisual19, _currentDataAirVisual20, _currentDataAirVisual21, _currentDataAirVisual22, _currentDataAirVisual23, _currentDataAirVisual24, _errorAirVisual$data;\n  const [isFavorited, setIsFavorited] = useState(false);\n  const user = useSelector(selectCurrentUser);\n  const locationBeingDisplayed = useSelector(selectCurrentLocation);\n\n  //this is for Air Visual API, you need to query it as 'USA' not 'United States'\n  const locationBeingDisplayAirVisualCall = (locationBeingDisplayed === null || locationBeingDisplayed === void 0 ? void 0 : (_locationBeingDisplay = locationBeingDisplayed.country) === null || _locationBeingDisplay === void 0 ? void 0 : _locationBeingDisplay.name) === 'United States' ? {\n    \"city\": locationBeingDisplayed.city,\n    \"province\": locationBeingDisplayed.province,\n    \"country\": {\n      \"name\": \"USA\"\n    }\n  } : locationBeingDisplayed;\n  const skip = locationBeingDisplayed.city === null ? true : false;\n  const {\n    currentData: currentDataAirVisual,\n    //returns temperature in Celcius\n    isLoading: isLoadingAirVisual,\n    isSuccess: isSuccessAirVisual,\n    error: errorAirVisual,\n    isError: isErrorAirVisual,\n    isFetching: isFetchingAirVisual\n  } = useGetCityWeatherDataQuery(locationBeingDisplayAirVisualCall, {\n    skip\n  });\n  const lastUpdatedhour = isSuccessAirVisual ? currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual = currentDataAirVisual.data) === null || _currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual2 = _currentDataAirVisual.current) === null || _currentDataAirVisual2 === void 0 ? void 0 : (_currentDataAirVisual3 = _currentDataAirVisual2.weather) === null || _currentDataAirVisual3 === void 0 ? void 0 : _currentDataAirVisual3.ts.slice(11, 13) : null;\n  const {\n    currentData: currentDataCityData,\n    isSuccess: isSuccessCityData\n  } = useGetLocationKeyQuery(locationBeingDisplayed, {\n    skip\n  });\n  const timezone = isSuccessCityData ? currentDataCityData === null || currentDataCityData === void 0 ? void 0 : (_currentDataCityData$ = currentDataCityData.TimeZone) === null || _currentDataCityData$ === void 0 ? void 0 : _currentDataCityData$.Code : 'UTC'; // UTC time if no timezone is fetched\n  const gmtOffset = isSuccessCityData ? currentDataCityData === null || currentDataCityData === void 0 ? void 0 : (_currentDataCityData$2 = currentDataCityData.TimeZone) === null || _currentDataCityData$2 === void 0 ? void 0 : _currentDataCityData$2.GmtOffset : 0; // UTC time if no offset is fetched\n\n  const locationKey = currentDataCityData === null || currentDataCityData === void 0 ? void 0 : currentDataCityData.Key;\n  const skipForecasts = locationKey === undefined ? true : false;\n  const {\n    currentData: currentDataDailyForecast5Days,\n    isSuccess: isSuccess5DayForecast,\n    isFetching: isFetching5DayForecast\n  } = useGetDailyForecast5DaysQuery(locationKey, {\n    skip: skipForecasts\n  });\n  const {\n    currentData: currentDataHourlyForecast12Hours,\n    isSuccess: isSuccess12HourForecast,\n    isFetching: isFetching12HourForecast\n  } = useGetHourlyForecast12HoursQuery(locationKey, {\n    skip: skipForecasts\n  });\n\n  //Display of location name at the top of the page\n  const locationName = locationBeingDisplayed.city === null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"location-name\",\n    children: [locationBeingDisplayed.city.name, \", \", locationBeingDisplayed.province.name, \", \", locationBeingDisplayed.country.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 73\n  }, this);\n\n  //Last updated time from Air Visual\n  const timeFormatted = isSuccessAirVisual ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Time, {\n      offset: gmtOffset,\n      number: currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual4 = currentDataAirVisual.data) === null || _currentDataAirVisual4 === void 0 ? void 0 : (_currentDataAirVisual5 = _currentDataAirVisual4.current) === null || _currentDataAirVisual5 === void 0 ? void 0 : (_currentDataAirVisual6 = _currentDataAirVisual5.weather) === null || _currentDataAirVisual6 === void 0 ? void 0 : _currentDataAirVisual6.ts.slice(11, 16)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), \" \", timezone]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  //Gets the users preferenced temperature unit\n  const temperatureUnit = useSelector(selectTempUnit);\n  const tempDegreeLetter = temperatureUnit === \"Celcius\" ? 'C' : 'F';\n\n  //Mock data for when the data cannot be retrieved\n  const fiveDayForecastMock = [{\n    Date: '2023-04-14T16:00:00',\n    Day: {\n      Icon: 1,\n      IconPhrase: \"Sunny\"\n    },\n    Temperature: {\n      Maximum: {\n        Value: 78\n      },\n      Minimum: {\n        Value: 49\n      }\n    }\n  }, {\n    Date: '2023-04-15T16:00:00',\n    Day: {\n      Icon: 32\n    },\n    Temperature: {\n      Maximum: {\n        Value: 90\n      },\n      Minimum: {\n        Value: 75\n      }\n    }\n  }, {\n    Date: '2023-04-16T16:00:00',\n    Day: {\n      Icon: 8\n    },\n    Temperature: {\n      Maximum: {\n        Value: 67\n      },\n      Minimum: {\n        Value: 44\n      }\n    }\n  }, {\n    Date: '2023-04-17T16:00:00',\n    Day: {\n      Icon: 19\n    },\n    Temperature: {\n      Maximum: {\n        Value: 84\n      },\n      Minimum: {\n        Value: 52\n      }\n    }\n  }, {\n    Date: '2023-04-18T16:00:00',\n    Day: {\n      Icon: 1\n    },\n    Temperature: {\n      Maximum: {\n        Value: 53\n      },\n      Minimum: {\n        Value: 41\n      }\n    }\n  }];\n  const twelveHourForecastMock = [{\n    DateTime: '2023-04-14T16:00:00',\n    WeatherIcon: 21,\n    Temperature: {\n      Value: 82\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T17:00:00',\n    WeatherIcon: 22,\n    Temperature: {\n      Value: 85\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T18:00:00',\n    WeatherIcon: 5,\n    Temperature: {\n      Value: 75\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T19:00:00',\n    WeatherIcon: 26,\n    Temperature: {\n      Value: 89\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T20:00:00',\n    WeatherIcon: 18,\n    Temperature: {\n      Value: 78\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T21:00:00',\n    WeatherIcon: 19,\n    Temperature: {\n      Value: 63\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T22:00:00',\n    WeatherIcon: 6,\n    Temperature: {\n      Value: 68\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T23:00:00',\n    WeatherIcon: 13,\n    Temperature: {\n      Value: 73\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T00:00:00',\n    WeatherIcon: 25,\n    Temperature: {\n      Value: 83\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T01:00:00',\n    WeatherIcon: 29,\n    Temperature: {\n      Value: 65\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T02:00:00',\n    WeatherIcon: 17,\n    Temperature: {\n      Value: 56\n    },\n    PrecipitationProbability: 24\n  }, {\n    DateTime: '2023-04-14T03:00:00',\n    WeatherIcon: 15,\n    Temperature: {\n      Value: 53\n    },\n    PrecipitationProbability: 24\n  }];\n\n  //Five days forecast data from AccuWeather\n  const fiveDayForecastArray = isSuccess5DayForecast ? currentDataDailyForecast5Days.DailyForecasts : fiveDayForecastMock;\n\n  //Five days forecast data displayed as html components\n  const fiveDayForecastsDisplay = fiveDayForecastArray.map((forecast, index) => {\n    var _forecast$Day, _forecast$Temperature, _forecast$Temperature2, _forecast$Temperature3, _forecast$Temperature4;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"individual-forecast-day\",\n      className: \"weather-panel border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-column flex-center-align\",\n        id: \"forecast-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"individual-forecast-weather-date\",\n          className: \"flex-center-align\",\n          children: index === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 36\n          }, this) //todays date is when the index is 0\n          : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Month, {\n              number: forecast === null || forecast === void 0 ? void 0 : forecast.Date.slice(6, 7),\n              abr: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), \" \", forecast === null || forecast === void 0 ? void 0 : forecast.Date.slice(8, 10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-icon\",\n            children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n              id: forecast === null || forecast === void 0 ? void 0 : (_forecast$Day = forecast.Day) === null || _forecast$Day === void 0 ? void 0 : _forecast$Day.Icon,\n              height: 48,\n              width: 48\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"temp-min-max\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(Temperature, {\n                options: {\n                  temperature: forecast === null || forecast === void 0 ? void 0 : (_forecast$Temperature = forecast.Temperature) === null || _forecast$Temperature === void 0 ? void 0 : (_forecast$Temperature2 = _forecast$Temperature.Maximum) === null || _forecast$Temperature2 === void 0 ? void 0 : _forecast$Temperature2.Value,\n                  unit: \"Fahrenheit\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 31\n              }, this), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(Temperature, {\n                options: {\n                  temperature: forecast === null || forecast === void 0 ? void 0 : (_forecast$Temperature3 = forecast.Temperature) === null || _forecast$Temperature3 === void 0 ? void 0 : (_forecast$Temperature4 = _forecast$Temperature3.Minimum) === null || _forecast$Temperature4 === void 0 ? void 0 : _forecast$Temperature4.Value,\n                  unit: \"Fahrenheit\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 31\n              }, this), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this)\n    }, forecast === null || forecast === void 0 ? void 0 : forecast.Date, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this);\n  });\n\n  //the state of the hourly forecast button\n  const [twelveHourForecastState, setTwelveHourForecastState] = useState(\"firstHalf\"); //two states, \"firstHalf\", \"lastHalf\"\n  const handleTwelveHourButtonClick = () => {\n    if (twelveHourForecastState === \"firstHalf\") {\n      setTwelveHourForecastState(\"lastHalf\");\n    } else {\n      setTwelveHourForecastState(\"firstHalf\");\n    }\n  };\n\n  //Button that manages the hourly forecast menu, showing the first half of the forecasts or the last half\n  //Showing hours of forecasts is a lot so I split it on two pages\n  const hourlyForecastButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: twelveHourForecastState === \"firstHalf\" ? \"hourly-arrow-right\" : \"hourly-arrow-left\",\n    className: \"weather-panel border\",\n    onClick: () => handleTwelveHourButtonClick(),\n    children: twelveHourForecastState === \"firstHalf\" ? /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 52\n    }, this) : /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 69\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 34\n  }, this);\n\n  //Checks which hour of the hourly forcast from AccuWeather corresponds to the current last updated hour from Air Visual data\n  const [hourlyIndex, setHourlyIndex] = useState(0);\n  useEffect(() => {\n    if (isSuccess12HourForecast) {\n      currentDataHourlyForecast12Hours.forEach((entry, index) => {\n        if (entry.DateTime.slice(11, 13) === lastUpdatedhour) {\n          setHourlyIndex(index);\n          return;\n        }\n      });\n    }\n  }, [isSuccess12HourForecast]);\n\n  //hourly array of forecasts data\n  const twelveHourForecastArray = isSuccess12HourForecast ? currentDataHourlyForecast12Hours.slice(hourlyIndex) //remove hours before current data (who wants to see weather history?)\n  : twelveHourForecastMock;\n\n  //hourly forecast React element\n  const twelveHourForecastDisplay = twelveHourForecastArray.map((forecast, index) => {\n    var _forecast$Temperature5;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: twelveHourForecastState === \"firstHalf\" ? \"first-half\" : \"last-half\",\n      id: \"individual-forecast-hour\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hourly-time\",\n        children: /*#__PURE__*/_jsxDEV(Time, {\n          offset: gmtOffset,\n          number: forecast === null || forecast === void 0 ? void 0 : forecast.DateTime.slice(11, 16)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hourly-phrase\",\n        children: forecast === null || forecast === void 0 ? void 0 : forecast.IconPhrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-icon flex-center-align\",\n        children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n          id: forecast === null || forecast === void 0 ? void 0 : forecast.WeatherIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Temperature, {\n          options: {\n            temperature: forecast === null || forecast === void 0 ? void 0 : (_forecast$Temperature5 = forecast.Temperature) === null || _forecast$Temperature5 === void 0 ? void 0 : _forecast$Temperature5.Value,\n            unit: \"Fahrenheit\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }, this), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"precip\",\n          children: [/*#__PURE__*/_jsxDEV(WaterDrop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 34\n          }, this), forecast === null || forecast === void 0 ? void 0 : forecast.PrecipitationProbability, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this)]\n    }, forecast === null || forecast === void 0 ? void 0 : forecast.DateTime, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this);\n  });\n\n  //Added the a last entry to the hourly forecast if theres any gaps\n  //ie this will display if previous hours of forecast were removed\n  //The hourly forecast display is meant for 12 but sometimes will display less (AccuWeather returns previous hours of data)\n  twelveHourForecastDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: twelveHourForecastState === \"firstHalf\" ? \"first-half\" : \"last-half\",\n    style: {\n      justifyContent: \"center\"\n    },\n    id: \"individual-forecast-hour\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-center-align\",\n      children: \"Updates every hour!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-center-align\",\n      children: /*#__PURE__*/_jsxDEV(Sunglasses, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this)]\n  }, \"no-way-date-is-this\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 36\n  }, this));\n\n  //Current temperature number from Air Visual API\n  const currentTemperature = isSuccessAirVisual ? /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(Temperature, {\n      options: {\n        temperature: currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual7 = currentDataAirVisual.data) === null || _currentDataAirVisual7 === void 0 ? void 0 : (_currentDataAirVisual8 = _currentDataAirVisual7.current) === null || _currentDataAirVisual8 === void 0 ? void 0 : (_currentDataAirVisual9 = _currentDataAirVisual8.weather) === null || _currentDataAirVisual9 === void 0 ? void 0 : _currentDataAirVisual9.tp,\n        unit: \"Celcius\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }, this), \"\\xB0\", tempDegreeLetter, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  //wind direction from Air Visual API, as an angle of 360° (N=0, E=90, S=180, W=270)\n  const windDirection = isSuccessAirVisual ? currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual10 = currentDataAirVisual.data) === null || _currentDataAirVisual10 === void 0 ? void 0 : (_currentDataAirVisual11 = _currentDataAirVisual10.current) === null || _currentDataAirVisual11 === void 0 ? void 0 : (_currentDataAirVisual12 = _currentDataAirVisual11.weather) === null || _currentDataAirVisual12 === void 0 ? void 0 : _currentDataAirVisual12.wd : 0;\n  const allUserLocations = useSelector(selectAllLocations);\n  useEffect(() => {\n    allUserLocations.forEach(location => {\n      if (location.id === locationBeingDisplayed.id) {\n        setIsFavorited(true);\n        return;\n      }\n    });\n  }, [allUserLocations]);\n\n  //Function that toggles weather or not the location is favorited\n  const toggleFavorite = () => {\n    if (isFavorited) {\n      setIsFavorited(false);\n      removeLocationFromUser();\n    } else {\n      setIsFavorited(true);\n      addLocationToUser();\n    }\n  };\n  const dispatch = useDispatch();\n  const [addLocationToBackendDB] = useAddUserLocationMutation();\n\n  //Adds the location to the user database\n  const addLocationToUser = async () => {\n    try {\n      //send backend request\n      const response = await addLocationToBackendDB({\n        username: user,\n        ...locationBeingDisplayed\n      }).unwrap();\n      const unique_id = response.id; //unique id of location in database\n\n      //this is under the assumption the location is now already in the database\n      //need to change the database response if the location is added to just add new user id\n      const {\n        id,\n        ...locationWithoutId\n      } = locationBeingDisplayed;\n      const locationWithUniqueId = {\n        ...locationWithoutId,\n        id: unique_id\n      };\n      dispatch(setCurrentLocation({\n        ...locationWithUniqueId\n      }));\n\n      //set application logic\n      dispatch(addLocation({\n        ...locationWithUniqueId\n      }));\n\n      //backend request contains unique restraint so only 1 of each location can be added\n      //calling both in the same try block ensures the unique constraint holds for the application logic dispatch\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const removeLocationFromUser = async () => {};\n\n  //Final location data display container\n  const locationData = /*#__PURE__*/_jsxDEV(\"article\", {\n    id: \"location-data-display\",\n    className: \"border\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"data-formatting-container\",\n      className: \"flex-center-align flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: user ? 'favorites-button' : 'favorites-button-disabled',\n        className: \"flex-center-align\",\n        onClick: user ? () => toggleFavorite() : null,\n        children: isFavorited ? /*#__PURE__*/_jsxDEV(StarFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(StarBorder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this), locationName, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"location-data\",\n        className: \"weather-panel-seperation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-column flex-center-align\",\n          id: \"top-row-left-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"weather\",\n            className: \"weather-panel border\",\n            children: [/*#__PURE__*/_jsxDEV(WeatherIcon, {\n              id: (_twelveHourForecastAr = twelveHourForecastArray[0]) === null || _twelveHourForecastAr === void 0 ? void 0 : _twelveHourForecastAr.WeatherIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"temperature\",\n                children: currentTemperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"today-phrase-and-precip\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: (_twelveHourForecastAr2 = twelveHourForecastArray[0]) === null || _twelveHourForecastAr2 === void 0 ? void 0 : _twelveHourForecastAr2.IconPhrase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"precip\",\n                children: [/*#__PURE__*/_jsxDEV(WaterDrop, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 47\n                }, this), (_twelveHourForecastAr3 = twelveHourForecastArray[0]) === null || _twelveHourForecastAr3 === void 0 ? void 0 : _twelveHourForecastAr3.PrecipitationProbability, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-row\",\n            id: \"other-weather-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-weather-data-entry weather-panel border\",\n              children: /*#__PURE__*/_jsxDEV(Wind, {\n                windDirection: windDirection,\n                speed: currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual13 = currentDataAirVisual.data) === null || _currentDataAirVisual13 === void 0 ? void 0 : (_currentDataAirVisual14 = _currentDataAirVisual13.current) === null || _currentDataAirVisual14 === void 0 ? void 0 : (_currentDataAirVisual15 = _currentDataAirVisual14.weather) === null || _currentDataAirVisual15 === void 0 ? void 0 : _currentDataAirVisual15.ws\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-weather-data-entry weather-panel border\",\n              id: \"atmospheric-pressure\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-row\",\n                style: {\n                  gap: '3px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"atmospheric-pressure\",\n                  children: \"Pressure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ToolTip, {\n                  item: /*#__PURE__*/_jsxDEV(Info, {\n                    height: 16,\n                    width: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 48\n                  }, this),\n                  label: 'Atmospheric Pressure',\n                  text: 'Pressure caused by the weight of the atmosphere. At sea level it has a mean value of 1,013.25 hPa but reduces with increasing altitude.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 29\n              }, this), currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual16 = currentDataAirVisual.data) === null || _currentDataAirVisual16 === void 0 ? void 0 : (_currentDataAirVisual17 = _currentDataAirVisual16.current) === null || _currentDataAirVisual17 === void 0 ? void 0 : (_currentDataAirVisual18 = _currentDataAirVisual17.weather) === null || _currentDataAirVisual18 === void 0 ? void 0 : _currentDataAirVisual18.pr, \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-column flex-center-align\",\n          id: \"top-row-right-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-panel border flex-column flex-center-align\",\n            id: \"AQI\",\n            children: /*#__PURE__*/_jsxDEV(AirQuality, {\n              number: currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual19 = currentDataAirVisual.data) === null || _currentDataAirVisual19 === void 0 ? void 0 : (_currentDataAirVisual20 = _currentDataAirVisual19.current) === null || _currentDataAirVisual20 === void 0 ? void 0 : (_currentDataAirVisual21 = _currentDataAirVisual20.pollution) === null || _currentDataAirVisual21 === void 0 ? void 0 : _currentDataAirVisual21.aqius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-panel border flex-column flex-center-align\",\n            id: \"humidity\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-row\",\n              style: {\n                gap: '3px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"humidity\",\n                children: \"Humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ToolTip, {\n                item: /*#__PURE__*/_jsxDEV(Info, {\n                  height: 16,\n                  width: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 44\n                }, this),\n                text: 'Humidity is the amount of water vapor in the atmosphere. High humidity often feels moist or muggy, while low humidity can feel dry and create static electricity. Consider 40% to 50% humidity as normal or comfortable for indoors.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [currentDataAirVisual === null || currentDataAirVisual === void 0 ? void 0 : (_currentDataAirVisual22 = currentDataAirVisual.data) === null || _currentDataAirVisual22 === void 0 ? void 0 : (_currentDataAirVisual23 = _currentDataAirVisual22.current) === null || _currentDataAirVisual23 === void 0 ? void 0 : (_currentDataAirVisual24 = _currentDataAirVisual23.weather) === null || _currentDataAirVisual24 === void 0 ? void 0 : _currentDataAirVisual24.hu, \"% \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hourly-forecast-container\",\n        className: \"weather-panel-seperation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hourly-forecast\",\n          className: \"weather-panel border\",\n          children: twelveHourForecastDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hourly-arrow-container\",\n          children: hourlyForecastButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"five-day-forecast\",\n        className: \"weather-panel-seperation\",\n        children: fiveDayForecastsDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"last-updated\",\n        className: \"flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Last updated \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 17\n        }, this), timeFormatted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 26\n  }, this);\n  const err = isErrorAirVisual ? /*#__PURE__*/_jsxDEV(\"span\", {\n    children: errorAirVisual === null || errorAirVisual === void 0 ? void 0 : (_errorAirVisual$data = errorAirVisual.data) === null || _errorAirVisual$data === void 0 ? void 0 : _errorAirVisual$data.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 36\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const location = isSuccessAirVisual ? locationData : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-data-container\",\n    children: isErrorAirVisual ? err : isLoadingAirVisual || isFetchingAirVisual ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 83\n    }, this) : location\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 9\n  }, this);\n};\n_s(LocationData, \"t5iOuOmvGRYWPwHJHkcHnvbQ/OI=\", false, function () {\n  return [useSelector, useSelector, useGetCityWeatherDataQuery, useGetLocationKeyQuery, useGetDailyForecast5DaysQuery, useGetHourlyForecast12HoursQuery, useSelector, useSelector, useDispatch, useAddUserLocationMutation];\n});\n_c = LocationData;\nexport default LocationData;\nvar _c;\n$RefreshReg$(_c, \"LocationData\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useState","addLocation","selectAllLocations","selectCurrentLocation","setCurrentLocation","useGetCityWeatherDataQuery","useGetDailyForecast5DaysQuery","useGetHourlyForecast12HoursQuery","useGetLocationKeyQuery","StarBorder","StarFilled","ArrowLeft","ArrowRight","Sunglasses","North","Info","selectCurrentUser","selectTempUnit","Temperature","WeatherIcon","WaterDrop","Month","Time","AirQuality","Wind","ToolTip","useAddUserLocationMutation","LocationData","isFavorited","setIsFavorited","user","locationBeingDisplayed","locationBeingDisplayAirVisualCall","country","name","city","province","skip","currentData","currentDataAirVisual","isLoading","isLoadingAirVisual","isSuccess","isSuccessAirVisual","error","errorAirVisual","isError","isErrorAirVisual","isFetching","isFetchingAirVisual","lastUpdatedhour","data","current","weather","ts","slice","currentDataCityData","isSuccessCityData","timezone","TimeZone","Code","gmtOffset","GmtOffset","locationKey","Key","skipForecasts","undefined","currentDataDailyForecast5Days","isSuccess5DayForecast","isFetching5DayForecast","currentDataHourlyForecast12Hours","isSuccess12HourForecast","isFetching12HourForecast","locationName","timeFormatted","temperatureUnit","tempDegreeLetter","fiveDayForecastMock","Date","Day","Icon","IconPhrase","Maximum","Value","Minimum","twelveHourForecastMock","DateTime","PrecipitationProbability","fiveDayForecastArray","DailyForecasts","fiveDayForecastsDisplay","map","forecast","index","temperature","unit","twelveHourForecastState","setTwelveHourForecastState","handleTwelveHourButtonClick","hourlyForecastButton","hourlyIndex","setHourlyIndex","forEach","entry","twelveHourForecastArray","twelveHourForecastDisplay","push","justifyContent","currentTemperature","tp","windDirection","wd","allUserLocations","location","id","toggleFavorite","removeLocationFromUser","addLocationToUser","dispatch","addLocationToBackendDB","response","username","unwrap","unique_id","locationWithoutId","locationWithUniqueId","console","log","locationData","ws","gap","pr","pollution","aqius","hu","err","message"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Pages/LocationData.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nimport { addLocation, selectAllLocations, selectCurrentLocation, setCurrentLocation } from \"../../Features/locations/locationsSlice\"\r\nimport { useGetCityWeatherDataQuery } from \"../../Features/locations/airVisualApiSlice\";\r\nimport { useGetDailyForecast5DaysQuery, useGetHourlyForecast12HoursQuery, useGetLocationKeyQuery } from \"../../Features/locations/accuWeatherApiSlice\";\r\n\r\nimport '../../Styles/location.css';\r\nimport '../../Styles/app.css';\r\n\r\nimport { StarBorder, StarFilled, ArrowLeft, ArrowRight, Sunglasses, North, Info } from \"../../Icons/svgImages/index.js\";\r\nimport { selectCurrentUser } from \"../../Features/auth/authSlice\";\r\nimport { selectTempUnit } from \"../../Features/user_preferences/preferenceSlice\";\r\n\r\nimport Temperature from \"../Atoms/Temperature\";\r\nimport WeatherIcon from \"../Atoms/WeatherIcon\";\r\nimport { WaterDrop } from \"../../Icons/svgImages/Weather Icons\";\r\nimport Month from \"../Atoms/Month\";\r\nimport Time from \"../Atoms/Time\";\r\nimport AirQuality from \"../Atoms/AirQuality\";\r\nimport Wind from \"../Atoms/Wind\";\r\nimport ToolTip from \"../Atoms/ToolTip\";\r\nimport { useAddUserLocationMutation } from \"../../Features/auth/authApiSlice\";\r\n\r\nconst LocationData = () => {\r\n    const [isFavorited, setIsFavorited] = useState(false);\r\n\r\n    const user = useSelector(selectCurrentUser);\r\n    const locationBeingDisplayed = useSelector(selectCurrentLocation);\r\n\r\n    //this is for Air Visual API, you need to query it as 'USA' not 'United States'\r\n    const locationBeingDisplayAirVisualCall = locationBeingDisplayed?.country?.name === 'United States' ?\r\n        {\r\n            \"city\": locationBeingDisplayed.city,\r\n            \"province\": locationBeingDisplayed.province,\r\n            \"country\": {\r\n                \"name\": \"USA\",\r\n            }\r\n        } : locationBeingDisplayed;\r\n\r\n    const skip = locationBeingDisplayed.city === null ? true : false;\r\n\r\n    const { currentData: currentDataAirVisual, //returns temperature in Celcius\r\n        isLoading: isLoadingAirVisual,\r\n        isSuccess: isSuccessAirVisual,\r\n        error: errorAirVisual,\r\n        isError: isErrorAirVisual,\r\n        isFetching: isFetchingAirVisual } = useGetCityWeatherDataQuery(locationBeingDisplayAirVisualCall, { skip })\r\n\r\n\r\n    const lastUpdatedhour = isSuccessAirVisual ? currentDataAirVisual?.data?.current?.weather?.ts.slice(11, 13) : null;\r\n\r\n    const { currentData: currentDataCityData,\r\n        isSuccess: isSuccessCityData } = useGetLocationKeyQuery(locationBeingDisplayed, { skip });\r\n\r\n    const timezone = isSuccessCityData ? currentDataCityData?.TimeZone?.Code : 'UTC' // UTC time if no timezone is fetched\r\n    const gmtOffset = isSuccessCityData ? currentDataCityData?.TimeZone?.GmtOffset : 0 // UTC time if no offset is fetched\r\n\r\n    const locationKey = currentDataCityData?.Key;\r\n\r\n    const skipForecasts = locationKey === undefined ? true : false;\r\n    const { currentData: currentDataDailyForecast5Days,\r\n        isSuccess: isSuccess5DayForecast,\r\n        isFetching: isFetching5DayForecast\r\n    } = useGetDailyForecast5DaysQuery(locationKey, { skip: skipForecasts });\r\n    const { currentData: currentDataHourlyForecast12Hours,\r\n        isSuccess: isSuccess12HourForecast,\r\n        isFetching: isFetching12HourForecast\r\n    } = useGetHourlyForecast12HoursQuery(locationKey, { skip: skipForecasts });\r\n\r\n\r\n    //Display of location name at the top of the page\r\n    const locationName = locationBeingDisplayed.city === null ? <></> : <div id='location-name'>\r\n        {locationBeingDisplayed.city.name}, {locationBeingDisplayed.province.name}, {locationBeingDisplayed.country.name}\r\n    </div>\r\n\r\n    //Last updated time from Air Visual\r\n    const timeFormatted = isSuccessAirVisual ?\r\n        <div>\r\n            <Time offset={gmtOffset} number={currentDataAirVisual?.data?.current?.weather?.ts.slice(11, 16)} /> {timezone}\r\n        </div>\r\n        : <></>\r\n\r\n    //Gets the users preferenced temperature unit\r\n    const temperatureUnit = useSelector(selectTempUnit);\r\n    const tempDegreeLetter = temperatureUnit === \"Celcius\" ? 'C' : 'F';\r\n\r\n    //Mock data for when the data cannot be retrieved\r\n    const fiveDayForecastMock = [\r\n        {\r\n            Date: '2023-04-14T16:00:00',\r\n            Day: {\r\n                Icon: 1,\r\n                IconPhrase: \"Sunny\"\r\n            },\r\n            Temperature: {\r\n                Maximum: {\r\n                    Value: 78\r\n                },\r\n                Minimum: {\r\n                    Value: 49\r\n                }\r\n            }\r\n        },\r\n        {\r\n            Date: '2023-04-15T16:00:00',\r\n            Day: {\r\n                Icon: 32\r\n            },\r\n            Temperature: {\r\n                Maximum: {\r\n                    Value: 90\r\n                },\r\n                Minimum: {\r\n                    Value: 75\r\n                }\r\n            }\r\n        },\r\n        {\r\n            Date: '2023-04-16T16:00:00',\r\n            Day: {\r\n                Icon: 8\r\n            },\r\n            Temperature: {\r\n                Maximum: {\r\n                    Value: 67\r\n                },\r\n                Minimum: {\r\n                    Value: 44\r\n                }\r\n            }\r\n        },\r\n        {\r\n            Date: '2023-04-17T16:00:00',\r\n            Day: {\r\n                Icon: 19\r\n            },\r\n            Temperature: {\r\n                Maximum: {\r\n                    Value: 84\r\n                },\r\n                Minimum: {\r\n                    Value: 52\r\n                }\r\n            }\r\n        },\r\n        {\r\n            Date: '2023-04-18T16:00:00',\r\n            Day: {\r\n                Icon: 1\r\n            },\r\n            Temperature: {\r\n                Maximum: {\r\n                    Value: 53\r\n                },\r\n                Minimum: {\r\n                    Value: 41\r\n                }\r\n            }\r\n        }\r\n    ]\r\n    const twelveHourForecastMock = [\r\n        {\r\n            DateTime: '2023-04-14T16:00:00',\r\n            WeatherIcon: 21,\r\n            Temperature: {\r\n                Value: 82\r\n            },\r\n            PrecipitationProbability: 24,\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T17:00:00',\r\n            WeatherIcon: 22,\r\n            Temperature: {\r\n                Value: 85\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T18:00:00',\r\n            WeatherIcon: 5,\r\n            Temperature: {\r\n                Value: 75\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T19:00:00',\r\n            WeatherIcon: 26,\r\n            Temperature: {\r\n                Value: 89\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T20:00:00',\r\n            WeatherIcon: 18,\r\n            Temperature: {\r\n                Value: 78\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T21:00:00',\r\n            WeatherIcon: 19,\r\n            Temperature: {\r\n                Value: 63\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T22:00:00',\r\n            WeatherIcon: 6,\r\n            Temperature: {\r\n                Value: 68\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T23:00:00',\r\n            WeatherIcon: 13,\r\n            Temperature: {\r\n                Value: 73\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T00:00:00',\r\n            WeatherIcon: 25,\r\n            Temperature: {\r\n                Value: 83\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T01:00:00',\r\n            WeatherIcon: 29,\r\n            Temperature: {\r\n                Value: 65\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T02:00:00',\r\n            WeatherIcon: 17,\r\n            Temperature: {\r\n                Value: 56\r\n            },\r\n            PrecipitationProbability: 24\r\n        },\r\n        {\r\n            DateTime: '2023-04-14T03:00:00',\r\n            WeatherIcon: 15,\r\n            Temperature: {\r\n                Value: 53\r\n            },\r\n            PrecipitationProbability: 24\r\n        }\r\n    ]\r\n\r\n    //Five days forecast data from AccuWeather\r\n    const fiveDayForecastArray = isSuccess5DayForecast ? currentDataDailyForecast5Days.DailyForecasts : fiveDayForecastMock;\r\n\r\n    //Five days forecast data displayed as html components\r\n    const fiveDayForecastsDisplay = fiveDayForecastArray.map((forecast, index) =>\r\n        <div key={forecast?.Date} id=\"individual-forecast-day\" className=\"weather-panel border\">\r\n            <div className=\"flex-column flex-center-align\" id=\"forecast-container\">\r\n                <div id='individual-forecast-weather-date' className=\"flex-center-align\">\r\n                    {index === 0 ? <div>Today</div> //todays date is when the index is 0\r\n                        : <div>\r\n                            <Month number={forecast?.Date.slice(6, 7)} abr={true} /> {forecast?.Date.slice(8, 10)}\r\n                        </div>}\r\n                </div>\r\n                <div className=\"flex-row\" >\r\n                    <div className=\"weather-icon\">\r\n                        <WeatherIcon id={forecast?.Day?.Icon} height={48} width={48} />\r\n                    </div>\r\n                    <div id=\"temp-min-max\">\r\n                        <span><Temperature options={{ temperature: forecast?.Temperature?.Maximum?.Value, unit: \"Fahrenheit\" }} />°</span>\r\n                        <span><Temperature options={{ temperature: forecast?.Temperature?.Minimum?.Value, unit: \"Fahrenheit\" }} />°</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    //the state of the hourly forecast button\r\n    const [twelveHourForecastState, setTwelveHourForecastState] = useState(\"firstHalf\"); //two states, \"firstHalf\", \"lastHalf\"\r\n    const handleTwelveHourButtonClick = () => {\r\n        if (twelveHourForecastState === \"firstHalf\") {\r\n            setTwelveHourForecastState(\"lastHalf\");\r\n        }\r\n        else {\r\n            setTwelveHourForecastState(\"firstHalf\");\r\n        }\r\n    }\r\n\r\n    //Button that manages the hourly forecast menu, showing the first half of the forecasts or the last half\r\n    //Showing hours of forecasts is a lot so I split it on two pages\r\n    const hourlyForecastButton = <div id={twelveHourForecastState === \"firstHalf\" ? \"hourly-arrow-right\" : \"hourly-arrow-left\"}\r\n        className=\"weather-panel border\"\r\n        onClick={() => handleTwelveHourButtonClick()}>\r\n        {twelveHourForecastState === \"firstHalf\" ? <ArrowRight /> : <ArrowLeft />}\r\n    </div>\r\n\r\n    //Checks which hour of the hourly forcast from AccuWeather corresponds to the current last updated hour from Air Visual data\r\n    const [hourlyIndex, setHourlyIndex] = useState(0);\r\n    useEffect(() => {\r\n        if (isSuccess12HourForecast) {\r\n            currentDataHourlyForecast12Hours.forEach((entry, index) => {\r\n                if (entry.DateTime.slice(11, 13) === lastUpdatedhour) {\r\n                    setHourlyIndex(index);\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n    }, [isSuccess12HourForecast])\r\n\r\n    //hourly array of forecasts data\r\n    const twelveHourForecastArray = isSuccess12HourForecast ? currentDataHourlyForecast12Hours.slice(hourlyIndex) //remove hours before current data (who wants to see weather history?)\r\n        : twelveHourForecastMock;\r\n\r\n    //hourly forecast React element\r\n    const twelveHourForecastDisplay = twelveHourForecastArray.map((forecast, index) =>\r\n        <div key={forecast?.DateTime} className={twelveHourForecastState === \"firstHalf\" ? \"first-half\" : \"last-half\"} id=\"individual-forecast-hour\">\r\n            <div id=\"hourly-time\">\r\n                <Time offset={gmtOffset} number={forecast?.DateTime.slice(11, 16)} />\r\n            </div>\r\n            <div id=\"hourly-phrase\">\r\n                {forecast?.IconPhrase}\r\n            </div>\r\n            <div className=\"weather-icon flex-center-align\" >\r\n                <WeatherIcon id={forecast?.WeatherIcon} />\r\n            </div>\r\n\r\n            <div>\r\n                <Temperature options={{ temperature: forecast?.Temperature?.Value, unit: \"Fahrenheit\" }} />°\r\n            </div>\r\n            <div>\r\n                <div id='precip'><WaterDrop />{forecast?.PrecipitationProbability}%</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    //Added the a last entry to the hourly forecast if theres any gaps\r\n    //ie this will display if previous hours of forecast were removed\r\n    //The hourly forecast display is meant for 12 but sometimes will display less (AccuWeather returns previous hours of data)\r\n    twelveHourForecastDisplay.push(<div key={\"no-way-date-is-this\"} className={twelveHourForecastState === \"firstHalf\" ? \"first-half\" : \"last-half\"} style={{ justifyContent: \"center\" }} id=\"individual-forecast-hour\">\r\n        <div className=\"flex-center-align\">Updates every hour!</div>\r\n        <div className=\"flex-center-align\"><Sunglasses /></div>\r\n    </div>)\r\n\r\n    //Current temperature number from Air Visual API\r\n    const currentTemperature = isSuccessAirVisual ?\r\n        <span><Temperature options={{ temperature: currentDataAirVisual?.data?.current?.weather?.tp, unit: \"Celcius\" }} />°{tempDegreeLetter} </span>\r\n        : <></>\r\n\r\n    //wind direction from Air Visual API, as an angle of 360° (N=0, E=90, S=180, W=270)\r\n    const windDirection = isSuccessAirVisual ? currentDataAirVisual?.data?.current?.weather?.wd : 0;\r\n\r\n\r\n    const allUserLocations = useSelector(selectAllLocations);\r\n\r\n    useEffect(()=>{\r\n       allUserLocations.forEach(location =>{\r\n            if(location.id === locationBeingDisplayed.id){\r\n                setIsFavorited(true);\r\n                return;\r\n            }\r\n       });\r\n    },[allUserLocations])\r\n\r\n    //Function that toggles weather or not the location is favorited\r\n    const toggleFavorite = () => {\r\n        if (isFavorited) {\r\n            setIsFavorited(false);\r\n            removeLocationFromUser();\r\n        }\r\n        else{ \r\n            setIsFavorited(true);\r\n            addLocationToUser();\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const [addLocationToBackendDB] = useAddUserLocationMutation();\r\n\r\n    //Adds the location to the user database\r\n    const addLocationToUser = async () => {\r\n        try{\r\n            //send backend request\r\n            const response = await addLocationToBackendDB({username: user, ...locationBeingDisplayed}).unwrap();\r\n            const unique_id = response.id; //unique id of location in database\r\n\r\n            //this is under the assumption the location is now already in the database\r\n            //need to change the database response if the location is added to just add new user id\r\n            const {id, ...locationWithoutId} = locationBeingDisplayed; \r\n            const locationWithUniqueId = {...locationWithoutId, id: unique_id};\r\n\r\n            dispatch(setCurrentLocation({...locationWithUniqueId}));\r\n\r\n            //set application logic\r\n            dispatch(addLocation({...locationWithUniqueId}));\r\n\r\n            //backend request contains unique restraint so only 1 of each location can be added\r\n            //calling both in the same try block ensures the unique constraint holds for the application logic dispatch\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    const removeLocationFromUser = async () =>{\r\n        \r\n    }\r\n\r\n    //Final location data display container\r\n    const locationData = <article id=\"location-data-display\" className=\"border\" >\r\n        <div id=\"data-formatting-container\" className=\"flex-center-align flex-column\">\r\n            <div id={user ? 'favorites-button' : 'favorites-button-disabled'} className=\"flex-center-align\" onClick={user ? () => toggleFavorite() : null}>\r\n                {isFavorited ? <StarFilled /> : <StarBorder />}\r\n            </div>\r\n            {locationName}\r\n            <div id=\"location-data\" className=\"weather-panel-seperation\" >\r\n                <div className=\"flex-column flex-center-align\" id=\"top-row-left-data\">\r\n\r\n                    <div id='weather' className=\"weather-panel border\">\r\n                        <WeatherIcon id={twelveHourForecastArray[0]?.WeatherIcon} />\r\n                        <div>\r\n                            <div id='temperature'>{currentTemperature}</div>\r\n                        </div>\r\n                        <div id=\"today-phrase-and-precip\">\r\n                            <div>{twelveHourForecastArray[0]?.IconPhrase}</div>\r\n                            {<div id='precip'><WaterDrop />{twelveHourForecastArray[0]?.PrecipitationProbability}%</div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-row\" id=\"other-weather-data\">\r\n                        <div className=\"other-weather-data-entry weather-panel border\">\r\n                            <Wind windDirection={windDirection} speed={currentDataAirVisual?.data?.current?.weather?.ws} />\r\n                        </div>\r\n                        <div className=\"other-weather-data-entry weather-panel border\" id='atmospheric-pressure'>\r\n                            <div className=\"flex-row\" style={{ gap: '3px' }}>\r\n                                <label htmlFor=\"atmospheric-pressure\">Pressure</label>\r\n                                <ToolTip item={<Info height={16} width={16} />} label={'Atmospheric Pressure'} text={'Pressure caused by the weight of the atmosphere. At sea level it has a mean value of 1,013.25 hPa but reduces with increasing altitude.'} />\r\n                            </div>\r\n                            {currentDataAirVisual?.data?.current?.weather?.pr} hPa\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex-column flex-center-align\" id=\"top-row-right-data\">\r\n                    <div className=\"weather-panel border flex-column flex-center-align\" id='AQI'>\r\n                        <AirQuality number={currentDataAirVisual?.data?.current?.pollution?.aqius} />\r\n                    </div>\r\n\r\n                    <div className=\"weather-panel border flex-column flex-center-align\" id=\"humidity\">\r\n                        <div className=\"flex-row\" style={{ gap: '3px' }}>\r\n                            <label htmlFor=\"humidity\">Humidity</label>\r\n                            <ToolTip item={<Info height={16} width={16} />} text={'Humidity is the amount of water vapor in the atmosphere. High humidity often feels moist or muggy, while low humidity can feel dry and create static electricity. Consider 40% to 50% humidity as normal or comfortable for indoors.'} />\r\n                        </div>\r\n                        <span>{currentDataAirVisual?.data?.current?.weather?.hu}% </span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div id=\"hourly-forecast-container\" className=\"weather-panel-seperation\">\r\n                <div id='hourly-forecast' className=\"weather-panel border\">\r\n                    {twelveHourForecastDisplay}\r\n                </div>\r\n                <div id=\"hourly-arrow-container\">\r\n                    {hourlyForecastButton}\r\n                </div>\r\n            </div>\r\n            <div id='five-day-forecast' className=\"weather-panel-seperation\" >\r\n                {fiveDayForecastsDisplay}\r\n            </div>\r\n            <div id=\"last-updated\" className=\"flex-row\">\r\n                <span>Last updated </span>\r\n                {timeFormatted}\r\n            </div>\r\n        </div>\r\n    </article>\r\n\r\n    const err = isErrorAirVisual ? <span>{errorAirVisual?.data?.message}</span> : <></>\r\n    const location = isSuccessAirVisual ? locationData : <></>;\r\n\r\n\r\n    return (\r\n        <div className=\"location-data-container\">\r\n            {isErrorAirVisual ? err : isLoadingAirVisual || isFetchingAirVisual ? <span>Loading...</span> : location}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationData"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}