{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Modules\\\\AddLocationOptions\\\\AddLocationManual.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { useSelector } from 'react-redux';\nimport { useGetCountriesQuery } from '../../Features/locations/locationApiSlice';\nimport { selectCurrentUser } from '../../Features/auth/authSlice';\nimport { useAddUserLocationMutation } from '../../Features/auth/authApiSlice';\nimport SelectState from '../../Atoms/SelectState';\nimport SelectCity from '../../Atoms/SelectCity';\nimport './../../Styles/addLocation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddLocationManual = props => {\n  _s();\n  const user = useSelector(selectCurrentUser);\n  const [country, setCountry] = useState();\n  const [state, setState] = useState();\n  const [city, setCity] = useState();\n  const {\n    data,\n    currentData,\n    isSuccess\n  } = useGetCountriesQuery();\n  const countries = isSuccess ? currentData ? currentData.data : data.data : []; //data is the response from the backend, data.data is the list of countries\n  const optionsCountries = [];\n  countries.forEach(item => {\n    optionsCountries.push({\n      value: item.country,\n      label: item.country\n    });\n  });\n  const handleStateChange = state => {\n    setState(state);\n    setCity();\n  };\n  const stateSelect = country ? /*#__PURE__*/_jsxDEV(SelectState, {\n    country: country,\n    setState: handleStateChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 35\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const handleCityChange = city => setCity(city);\n  const citySelect = state ? /*#__PURE__*/_jsxDEV(SelectCity, {\n    country: country,\n    state: state,\n    setCity: handleCityChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 32\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const [addLocation, {\n    isLoading\n  }] = useAddUserLocationMutation();\n  const addToDatabase = async () => {\n    if (user) {\n      try {\n        const locationResponse = await addLocation({\n          'username': user,\n          'country': country,\n          'province': state,\n          'city': city\n        }).unwrap();\n        console.log(locationResponse);\n        setCity();\n        setState();\n        setCountry();\n      } catch (err) {\n        console.log(err === null || err === void 0 ? void 0 : err.status);\n        console.log(\"Error with backend call\");\n      }\n    }\n    props.toggleClose();\n  };\n  const submitButton = country ? state ? city ? /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"manualSubmit\",\n    onClick: () => addToDatabase(),\n    children: \"Submit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 51\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addLocationOptionsContent\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" Country \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: optionsCountries,\n      onChange: newValue => {\n        setCountry(newValue.value);\n        setState();\n        setCity();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), stateSelect, citySelect, /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"manualButtons\",\n      children: submitButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"manualClose\",\n      onClick: () => props.toggleClose(),\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(AddLocationManual, \"IVdK4Gmdrc1vg+9j/DnbKbS/sLM=\", false, function () {\n  return [useSelector, useGetCountriesQuery, useAddUserLocationMutation];\n});\n_c = AddLocationManual;\nexport default AddLocationManual;\nvar _c;\n$RefreshReg$(_c, \"AddLocationManual\");","map":{"version":3,"names":["useState","Select","useSelector","useGetCountriesQuery","selectCurrentUser","useAddUserLocationMutation","SelectState","SelectCity","AddLocationManual","props","user","country","setCountry","state","setState","city","setCity","data","currentData","isSuccess","countries","optionsCountries","forEach","item","push","value","label","handleStateChange","stateSelect","handleCityChange","citySelect","addLocation","isLoading","addToDatabase","locationResponse","unwrap","console","log","err","status","toggleClose","submitButton","newValue"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Modules/AddLocationOptions/AddLocationManual.js"],"sourcesContent":["import { useState } from 'react'\r\nimport Select from 'react-select'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { useGetCountriesQuery } from '../../Features/locations/locationApiSlice'\r\nimport { selectCurrentUser } from '../../Features/auth/authSlice'\r\nimport { useAddUserLocationMutation } from '../../Features/auth/authApiSlice'\r\n\r\nimport SelectState from '../../Atoms/SelectState'\r\nimport SelectCity from '../../Atoms/SelectCity'\r\n\r\nimport './../../Styles/addLocation.css';\r\n\r\n\r\nconst AddLocationManual = (props) => {\r\n\r\n    const user = useSelector(selectCurrentUser);\r\n    const [country, setCountry] = useState();\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n\r\n    const { data, currentData, isSuccess } = useGetCountriesQuery();\r\n\r\n    const countries = isSuccess ? currentData ? currentData.data : data.data : []; //data is the response from the backend, data.data is the list of countries\r\n    const optionsCountries = [];\r\n    countries.forEach(item => {\r\n        optionsCountries.push({\r\n            value: item.country,\r\n            label: item.country\r\n        });\r\n    });\r\n\r\n    const handleStateChange = (state) => {\r\n        setState(state);\r\n        setCity();\r\n    };\r\n    const stateSelect = country ? <SelectState country={country} setState={handleStateChange} /> : <></>;\r\n\r\n    const handleCityChange = (city) => setCity(city);\r\n    const citySelect = state ? <SelectCity country={country} state={state} setCity={handleCityChange} /> : <></>;\r\n\r\n    const [addLocation, {isLoading}] = useAddUserLocationMutation();\r\n    const addToDatabase = async () => {\r\n        if(user){\r\n            try{\r\n                const locationResponse = await addLocation({ 'username': user,'country': country, 'province': state, 'city': city }).unwrap();\r\n                console.log(locationResponse);\r\n                setCity();\r\n                setState();\r\n                setCountry();\r\n            }\r\n            catch(err){\r\n                console.log(err?.status);\r\n                console.log(\"Error with backend call\");\r\n            }\r\n        }\r\n        props.toggleClose();\r\n    }\r\n    const submitButton = country ? state ? city ? <button id=\"manualSubmit\" onClick={() => addToDatabase()}>Submit</button> : <></> : <></> : <></>;\r\n\r\n    return (\r\n        <div className='addLocationOptionsContent'>\r\n{/*             <button onClick={() => {\r\n                console.log(country);\r\n                console.log(state);\r\n                console.log(city);\r\n            }}>Check vars</button> */}\r\n            <br />\r\n            <span> Country </span>\r\n            <Select\r\n                options={optionsCountries}\r\n                onChange={((newValue) => { \r\n                    setCountry(newValue.value);\r\n                    setState();\r\n                    setCity(); \r\n                })}\r\n            />\r\n            {stateSelect}\r\n            {citySelect}\r\n            <div id=\"manualButtons\">\r\n                {submitButton}\r\n            </div>\r\n            <button id=\"manualClose\" onClick={() => props.toggleClose()}>Close</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddLocationManual;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}