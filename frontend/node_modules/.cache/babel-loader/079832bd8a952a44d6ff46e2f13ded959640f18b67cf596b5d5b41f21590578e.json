{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { apiSlice } from './api/apiSlice';\nimport authReducer from '../Features/auth/authSlice';\nimport locationsReducer from '../Features/locations/locationsSlice';\nimport preferenceReducer from '../Features/user_preferences/preferenceSlice';\nexport const store = configureStore({\n  reducer: {\n    locations: locationsReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n    auth: authReducer,\n    pref: preferenceReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(apiSlice.middleware),\n  devTools: true\n});","map":{"version":3,"names":["configureStore","apiSlice","authReducer","locationsReducer","preferenceReducer","store","reducer","locations","reducerPath","auth","pref","middleware","getDefaultMiddleware","concat","devTools"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/app/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { apiSlice } from './api/apiSlice';\r\nimport authReducer from '../Features/auth/authSlice';\r\nimport locationsReducer from '../Features/locations/locationsSlice';\r\nimport preferenceReducer from '../Features/user_preferences/preferenceSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        locations: locationsReducer,\r\n        [apiSlice.reducerPath]: apiSlice.reducer,\r\n        auth: authReducer,\r\n        pref: preferenceReducer\r\n\r\n    },\r\n    middleware: getDefaultMiddleware => \r\n        getDefaultMiddleware().concat(apiSlice.middleware),\r\n    devTools: true\r\n});"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAOC,iBAAiB,MAAM,8CAA8C;AAE5E,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAChCM,OAAO,EAAC;IACJC,SAAS,EAAEJ,gBAAgB;IAC3B,CAACF,QAAQ,CAACO,WAAW,GAAGP,QAAQ,CAACK,OAAO;IACxCG,IAAI,EAAEP,WAAW;IACjBQ,IAAI,EAAEN;EAEV,CAAC;EACDO,UAAU,EAAEC,oBAAoB,IAC5BA,oBAAoB,EAAE,CAACC,MAAM,CAACZ,QAAQ,CAACU,UAAU,CAAC;EACtDG,QAAQ,EAAE;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}