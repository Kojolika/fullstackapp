{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Atoms\\\\SelectState.js\",\n  _s = $RefreshSig$();\nimport Select from 'react-select';\nimport { useEffect, useState } from 'react';\nimport { useGetStatesQuery } from '../../Features/locations/locationApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectState = props => {\n  _s();\n  const {\n    data,\n    isSuccess,\n    refetch\n  } = useGetStatesQuery({\n    \"country\": props.country\n  });\n  const states = isSuccess ? data.data : [];\n  const optionsStates = [];\n  const [options, setOptions] = useState([]);\n  const refreshOptions = () => {\n    states.forEach(item => {\n      optionsStates.push({\n        value: item.state,\n        label: item.state\n      });\n    });\n    console.log(optionsStates);\n    return optionsStates;\n  };\n  useEffect(() => {\n    setOptions(refreshOptions());\n  }, [isSuccess]);\n  useEffect(() => {\n    refetch();\n    setOptions(refreshOptions());\n  }, [props.country]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"state\",\n      children: \"State/Province\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"state\",\n      options: options,\n      onChange: newValue => props.setState(newValue.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectState, \"jsX2JT34HeB/NWI9MUFpaIb7i7I=\", false, function () {\n  return [useGetStatesQuery];\n});\n_c = SelectState;\nexport default SelectState;\nvar _c;\n$RefreshReg$(_c, \"SelectState\");","map":{"version":3,"names":["Select","useEffect","useState","useGetStatesQuery","SelectState","props","data","isSuccess","refetch","country","states","optionsStates","options","setOptions","refreshOptions","forEach","item","push","value","state","label","console","log","newValue","setState"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/SelectState.js"],"sourcesContent":["import Select from 'react-select'\r\nimport { useEffect, useState } from 'react';\r\nimport { useGetStatesQuery } from '../../Features/locations/locationApiSlice';\r\n\r\nconst SelectState = (props) => {\r\n\r\n    const { data, isSuccess, refetch } = useGetStatesQuery({ \"country\": props.country });\r\n    const states = isSuccess ? data.data : [];\r\n    const optionsStates = [];\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const refreshOptions = () =>\r\n    {\r\n        states.forEach(item => {\r\n            optionsStates.push({\r\n                value: item.state,\r\n                label: item.state\r\n            });\r\n        });\r\n        console.log(optionsStates);\r\n        return optionsStates;\r\n    }\r\n    useEffect(()=>{\r\n        setOptions(refreshOptions())\r\n    },[isSuccess])\r\n\r\n    useEffect(() =>{\r\n        refetch();\r\n        setOptions(refreshOptions())\r\n    },[props.country])\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor='state'>State/Province</label>\r\n            <br />\r\n            <Select\r\n                id='state'\r\n                options={options}\r\n                onChange={(newValue) => props.setState(newValue.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectState"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,cAAc;AACjC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,iBAAiB,QAAQ,2CAA2C;AAAC;AAE9E,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAE3B,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGL,iBAAiB,CAAC;IAAE,SAAS,EAAEE,KAAK,CAACI;EAAQ,CAAC,CAAC;EACpF,MAAMC,MAAM,GAAGH,SAAS,GAAGD,IAAI,CAACA,IAAI,GAAG,EAAE;EACzC,MAAMK,aAAa,GAAG,EAAE;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,cAAc,GAAG,MACvB;IACIJ,MAAM,CAACK,OAAO,CAACC,IAAI,IAAI;MACnBL,aAAa,CAACM,IAAI,CAAC;QACfC,KAAK,EAAEF,IAAI,CAACG,KAAK;QACjBC,KAAK,EAAEJ,IAAI,CAACG;MAChB,CAAC,CAAC;IACN,CAAC,CAAC;IACFE,OAAO,CAACC,GAAG,CAACX,aAAa,CAAC;IAC1B,OAAOA,aAAa;EACxB,CAAC;EACDV,SAAS,CAAC,MAAI;IACVY,UAAU,CAACC,cAAc,EAAE,CAAC;EAChC,CAAC,EAAC,CAACP,SAAS,CAAC,CAAC;EAEdN,SAAS,CAAC,MAAK;IACXO,OAAO,EAAE;IACTK,UAAU,CAACC,cAAc,EAAE,CAAC;EAChC,CAAC,EAAC,CAACT,KAAK,CAACI,OAAO,CAAC,CAAC;EAElB,oBACI;IAAA,wBACI;MAAO,OAAO,EAAC,OAAO;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC7C;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,MAAM;MACH,EAAE,EAAC,OAAO;MACV,OAAO,EAAEG,OAAQ;MACjB,QAAQ,EAAGW,QAAQ,IAAKlB,KAAK,CAACmB,QAAQ,CAACD,QAAQ,CAACL,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAtCKd,WAAW;EAAA,QAEwBD,iBAAiB;AAAA;AAAA,KAFpDC,WAAW;AAwCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}