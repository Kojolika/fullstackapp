{"ast":null,"code":"import { useState } from \"react\";\nconst Time = props => {\n  //Assumption is that props.number is a string in the form 'HH:MM' where HH is the hour and MM is the minute\n  const number = parseInt(props.number.slice(0, 2));\n\n  //convert from military time\n  const regularTime = number > 12 ? number - 12 + ' PM' : number === 0 ? 12 + ' AM' : number + ' AM';\n  return regularTime;\n};\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["useState","Time","props","number","parseInt","slice","regularTime"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/Time.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Time = (props) => {\r\n    //Assumption is that props.number is a string in the form 'HH:MM' where HH is the hour and MM is the minute\r\n    const number = parseInt(props.number.slice(0,2)); \r\n    \r\n    //convert from military time\r\n    const regularTime = number > 12 ? number - 12 + ' PM': number === 0 ? 12 + ' AM' : number + ' AM';\r\n    \r\n    return regularTime;\r\n}\r\n\r\nexport default Time"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACpB;EACA,MAAMC,MAAM,GAAGC,QAAQ,CAACF,KAAK,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMC,WAAW,GAAGH,MAAM,GAAG,EAAE,GAAGA,MAAM,GAAG,EAAE,GAAG,KAAK,GAAEA,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,GAAGA,MAAM,GAAG,KAAK;EAEjG,OAAOG,WAAW;AACtB,CAAC;AAAA,KARKL,IAAI;AAUV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}