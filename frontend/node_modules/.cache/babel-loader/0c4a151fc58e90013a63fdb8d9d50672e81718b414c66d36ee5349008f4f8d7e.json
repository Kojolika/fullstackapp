{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst Time = props => {\n  _s();\n  const [meridiem, setMeridiem] = useState('AM'); //AM or PM\n  const [time, setTime] = useState(\"1\"); //time to be displayed\n\n  useEffect(() => {\n    //Assumption is that props.number is a string in the form 'HH:MM' where HH is the hour and MM is the minute\n    const militaryHour = parseInt(props.number.slice(0, 2));\n    const regularHour = militaryHour > 12 ? () => {\n      setMeridiem('PM');\n      return militaryHour - 12;\n    } : militaryHour === 0 ? 12 : militaryHour;\n\n    //props.offset is the offset number (+ or -) that converts this time from the UTC timezone to the local time\n    const afterOffset = regularHour + props.offset;\n    setTime(zeroCheck);\n  }, []);\n  return time + ' ' + meridiem;\n};\n_s(Time, \"nWPZ/s183JkcsQnperLnWlrfpIE=\");\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["useState","useEffect","Time","props","meridiem","setMeridiem","time","setTime","militaryHour","parseInt","number","slice","regularHour","afterOffset","offset","zeroCheck"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/Time.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst Time = (props) => {\r\n\r\n    const [meridiem, setMeridiem] = useState('AM'); //AM or PM\r\n    const [time, setTime] = useState(\"1\"); //time to be displayed\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        //Assumption is that props.number is a string in the form 'HH:MM' where HH is the hour and MM is the minute\r\n        const militaryHour = parseInt(props.number.slice(0, 2));\r\n\r\n        const regularHour = militaryHour > 12 ? () =>{\r\n            setMeridiem('PM');\r\n            return militaryHour - 12\r\n        } : militaryHour === 0 ? 12 : militaryHour;\r\n\r\n        //props.offset is the offset number (+ or -) that converts this time from the UTC timezone to the local time\r\n        const afterOffset = regularHour + props.offset;\r\n\r\n        \r\n\r\n        setTime(zeroCheck);\r\n\r\n    }, [])\r\n\r\n    return time + ' ' + meridiem;\r\n}\r\n\r\nexport default Time"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EAEpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAGvCC,SAAS,CAAC,MAAM;IAEZ;IACA,MAAMO,YAAY,GAAGC,QAAQ,CAACN,KAAK,CAACO,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEvD,MAAMC,WAAW,GAAGJ,YAAY,GAAG,EAAE,GAAG,MAAK;MACzCH,WAAW,CAAC,IAAI,CAAC;MACjB,OAAOG,YAAY,GAAG,EAAE;IAC5B,CAAC,GAAGA,YAAY,KAAK,CAAC,GAAG,EAAE,GAAGA,YAAY;;IAE1C;IACA,MAAMK,WAAW,GAAGD,WAAW,GAAGT,KAAK,CAACW,MAAM;IAI9CP,OAAO,CAACQ,SAAS,CAAC;EAEtB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,IAAI,GAAG,GAAG,GAAGF,QAAQ;AAChC,CAAC;AAAA,GA1BKF,IAAI;AAAA,KAAJA,IAAI;AA4BV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}