{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amm98\\\\Documents\\\\fullstackapp\\\\frontend\\\\src\\\\Components\\\\Atoms\\\\SelectLocation.js\",\n  _s = $RefreshSig$();\nimport Select from 'react-select';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SelectLocation = props => {\n  _s();\n  const {\n    useQuery,\n    placeholderMessage,\n    loadingMessage,\n    locationType,\n    refetchOnMountOrArgChange\n  } = props.options;\n  const isRefetchOnArg = refetchOnMountOrArgChange ? refetchOnMountOrArgChange : false;\n  const query = props.query ? props.query : null;\n  const {\n    data,\n    currentData,\n    isLoading,\n    isSuccess,\n    isError,\n    refetch,\n    error\n  } = useQuery(query, {\n    refetchOnMountOrArgChange: isRefetchOnArg\n  });\n  const locations = isSuccess ? currentData ? currentData : data : [];\n  const options = [];\n  locations.forEach(item => {\n    options.push({\n      value: item[locationType],\n      label: item[locationType]\n    });\n  });\n  const handleChange = newValue => {\n    props.setLocation(newValue.value);\n  };\n  useEffect(() => {\n    if (isError) {\n      var _error$data;\n      props.setErrorMessage(error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message);\n    } else props.setErrorMessage('');\n  }, [isError]);\n  const capitalLocation = locationType.charAt(0).toUpperCase() + locationType.slice(1);\n  const refetchButton = isError ? /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => refetch(),\n    children: \"Retry\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 36\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: locationType,\n      children: capitalLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: locationType,\n      placeholder: placeholderMessage,\n      isLoading: isLoading ? true : false,\n      loadingMessage: () => loadingMessage,\n      options: options,\n      onChange: newValue => handleChange(newValue),\n      autoFocus: true,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), refetchButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectLocation, \"8wqhqDSND/sIQPddUBkh+Afr89c=\", true);\n_c = SelectLocation;\nexport default SelectLocation;\nvar _c;\n$RefreshReg$(_c, \"SelectLocation\");","map":{"version":3,"names":["Select","useEffect","SelectLocation","props","useQuery","placeholderMessage","loadingMessage","locationType","refetchOnMountOrArgChange","options","isRefetchOnArg","query","data","currentData","isLoading","isSuccess","isError","refetch","error","locations","forEach","item","push","value","label","handleChange","newValue","setLocation","setErrorMessage","message","capitalLocation","charAt","toUpperCase","slice","refetchButton"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Components/Atoms/SelectLocation.js"],"sourcesContent":["import Select from 'react-select'\r\nimport { useEffect } from 'react';\r\n\r\nconst SelectLocation = (props) => {\r\n\r\n    const { useQuery, placeholderMessage, loadingMessage, locationType, refetchOnMountOrArgChange } = props.options;\r\n\r\n    const isRefetchOnArg = refetchOnMountOrArgChange ? refetchOnMountOrArgChange : false;\r\n    const query = props.query ? props.query : null;\r\n    const { data, currentData, isLoading, isSuccess, isError, refetch, error } = useQuery(query, { refetchOnMountOrArgChange: isRefetchOnArg });\r\n\r\n    const locations = isSuccess ? currentData ? currentData : data : [];\r\n    const options = [];\r\n    locations.forEach(item => {\r\n        options.push({\r\n            value: item[locationType],\r\n            label: item[locationType],\r\n        });\r\n    });\r\n\r\n    const handleChange = (newValue) => {\r\n        props.setLocation(newValue.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            props.setErrorMessage(error?.data?.message);\r\n        }\r\n        else props.setErrorMessage('');\r\n    }, [isError])\r\n\r\n    const capitalLocation = locationType.charAt(0).toUpperCase() + locationType.slice(1);\r\n\r\n    const refetchButton = isError? <button onClick={()=>refetch()}>Retry</button>: <></>;\r\n\r\n    return (\r\n        <div>\r\n\r\n            <label htmlFor={locationType}>{capitalLocation}</label>\r\n            <br />\r\n            <Select\r\n                id={locationType}\r\n                placeholder={placeholderMessage}\r\n                isLoading={isLoading ? true : false}\r\n                loadingMessage={() => loadingMessage}\r\n                options={options}\r\n                onChange={newValue => handleChange(newValue)}\r\n                autoFocus={true}\r\n                required={true}\r\n            />\r\n            {refetchButton}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectLocation"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,cAAc;AACjC,SAASC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAElC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAE9B,MAAM;IAAEC,QAAQ;IAAEC,kBAAkB;IAAEC,cAAc;IAAEC,YAAY;IAAEC;EAA0B,CAAC,GAAGL,KAAK,CAACM,OAAO;EAE/G,MAAMC,cAAc,GAAGF,yBAAyB,GAAGA,yBAAyB,GAAG,KAAK;EACpF,MAAMG,KAAK,GAAGR,KAAK,CAACQ,KAAK,GAAGR,KAAK,CAACQ,KAAK,GAAG,IAAI;EAC9C,MAAM;IAAEC,IAAI;IAAEC,WAAW;IAAEC,SAAS;IAAEC,SAAS;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGd,QAAQ,CAACO,KAAK,EAAE;IAAEH,yBAAyB,EAAEE;EAAe,CAAC,CAAC;EAE3I,MAAMS,SAAS,GAAGJ,SAAS,GAAGF,WAAW,GAAGA,WAAW,GAAGD,IAAI,GAAG,EAAE;EACnE,MAAMH,OAAO,GAAG,EAAE;EAClBU,SAAS,CAACC,OAAO,CAACC,IAAI,IAAI;IACtBZ,OAAO,CAACa,IAAI,CAAC;MACTC,KAAK,EAAEF,IAAI,CAACd,YAAY,CAAC;MACzBiB,KAAK,EAAEH,IAAI,CAACd,YAAY;IAC5B,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,MAAMkB,YAAY,GAAIC,QAAQ,IAAK;IAC/BvB,KAAK,CAACwB,WAAW,CAACD,QAAQ,CAACH,KAAK,CAAC;EACrC,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZ,IAAIe,OAAO,EAAE;MAAA;MACTb,KAAK,CAACyB,eAAe,CAACV,KAAK,aAALA,KAAK,sCAALA,KAAK,CAAEN,IAAI,gDAAX,YAAaiB,OAAO,CAAC;IAC/C,CAAC,MACI1B,KAAK,CAACyB,eAAe,CAAC,EAAE,CAAC;EAClC,CAAC,EAAE,CAACZ,OAAO,CAAC,CAAC;EAEb,MAAMc,eAAe,GAAGvB,YAAY,CAACwB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGzB,YAAY,CAAC0B,KAAK,CAAC,CAAC,CAAC;EAEpF,MAAMC,aAAa,GAAGlB,OAAO,gBAAE;IAAQ,OAAO,EAAE,MAAIC,OAAO,EAAG;IAAA,UAAC;EAAK;IAAA;IAAA;IAAA;EAAA,QAAS,gBAAE,qCAAK;EAEpF,oBACI;IAAA,wBAEI;MAAO,OAAO,EAAEV,YAAa;MAAA,UAAEuB;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eACvD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,MAAM;MACH,EAAE,EAAEvB,YAAa;MACjB,WAAW,EAAEF,kBAAmB;MAChC,SAAS,EAAES,SAAS,GAAG,IAAI,GAAG,KAAM;MACpC,cAAc,EAAE,MAAMR,cAAe;MACrC,OAAO,EAAEG,OAAQ;MACjB,QAAQ,EAAEiB,QAAQ,IAAID,YAAY,CAACC,QAAQ,CAAE;MAC7C,SAAS,EAAE,IAAK;MAChB,QAAQ,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QACjB,EACDQ,aAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEd,CAAC;AAAA,GAlDKhC,cAAc;AAAA,KAAdA,cAAc;AAoDpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}