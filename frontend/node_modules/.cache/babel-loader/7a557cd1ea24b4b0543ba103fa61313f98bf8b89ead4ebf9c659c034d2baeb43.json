{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  locations: [],\n  currentLocation: {\n    \"city\": null,\n    \"province\": null,\n    \"country\": null\n  }\n};\nconst locationsSlice = createSlice({\n  name: 'locations',\n  initialState,\n  reducers: {\n    setUserLocations: (state, action) => {\n      const {\n        locations\n      } = action.payload;\n      state.locations = locations;\n    },\n    addLocation: (state, action) => {\n      const {\n        city,\n        province,\n        country\n      } = action.payload;\n      state.locations = [...state.locations, {\n        \"city\": city,\n        \"province\": province,\n        \"country\": country\n      }];\n    },\n    setCurrentLocation: (state, action) => {\n      const {\n        city,\n        province,\n        country\n      } = action.payload;\n      state.currentLocation.city = {\n        \"name\": city.name\n      };\n      state.currentLocation.province = {\n        \"name\": province.name,\n        \"state_code\": province.state_code\n      };\n      state.currentLocation.country = {\n        \"name\": country.name,\n        \"iso2\": country.iso2 //country 2 letter code\n      };\n    }\n  }\n});\n\nexport const {\n  addLocation,\n  setUserLocations\n} = locationsSlice.actions;\nexport default locationsSlice.reducer;\nexport const selectAllLocations = state => state.locations.locations;","map":{"version":3,"names":["createSlice","initialState","locations","currentLocation","locationsSlice","name","reducers","setUserLocations","state","action","payload","addLocation","city","province","country","setCurrentLocation","state_code","iso2","actions","reducer","selectAllLocations"],"sources":["C:/Users/amm98/Documents/fullstackapp/frontend/src/Features/locations/locationsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    locations: [],\r\n    currentLocation:{\r\n        \"city\": null,\r\n        \"province\": null,\r\n        \"country\": null\r\n    }\r\n};\r\n\r\nconst locationsSlice = createSlice({\r\n    name: 'locations',\r\n    initialState,\r\n    reducers: {\r\n        setUserLocations: (state, action) => {\r\n            const { locations } = action.payload;\r\n            state.locations = locations;\r\n\r\n        },\r\n        addLocation: (state, action) => {\r\n            const { city, province, country } = action.payload;\r\n            state.locations = [...state.locations, {\r\n                \"city\": city,\r\n                \"province\": province,\r\n                \"country\": country\r\n            }]\r\n        },\r\n        setCurrentLocation: (state, action) => {\r\n            const { city, province, country } = action.payload;\r\n            state.currentLocation.city = {\r\n                \"name\": city.name\r\n            };\r\n            state.currentLocation.province = {\r\n                \"name\": province.name,\r\n                \"state_code\": province.state_code\r\n            }\r\n            state.currentLocation.country = {\r\n                \"name\": country.name,\r\n                \"iso2\": country.iso2 //country 2 letter code\r\n            };\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addLocation, setUserLocations } = locationsSlice.actions;\r\n\r\nexport default locationsSlice.reducer;\r\n\r\nexport const selectAllLocations = (state) => state.locations.locations;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,eAAe,EAAC;IACZ,MAAM,EAAE,IAAI;IACZ,UAAU,EAAE,IAAI;IAChB,SAAS,EAAE;EACf;AACJ,CAAC;AAED,MAAMC,cAAc,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,WAAW;EACjBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,gBAAgB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEP;MAAU,CAAC,GAAGO,MAAM,CAACC,OAAO;MACpCF,KAAK,CAACN,SAAS,GAAGA,SAAS;IAE/B,CAAC;IACDS,WAAW,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEG,IAAI;QAAEC,QAAQ;QAAEC;MAAQ,CAAC,GAAGL,MAAM,CAACC,OAAO;MAClDF,KAAK,CAACN,SAAS,GAAG,CAAC,GAAGM,KAAK,CAACN,SAAS,EAAE;QACnC,MAAM,EAAEU,IAAI;QACZ,UAAU,EAAEC,QAAQ;QACpB,SAAS,EAAEC;MACf,CAAC,CAAC;IACN,CAAC;IACDC,kBAAkB,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAM;QAAEG,IAAI;QAAEC,QAAQ;QAAEC;MAAQ,CAAC,GAAGL,MAAM,CAACC,OAAO;MAClDF,KAAK,CAACL,eAAe,CAACS,IAAI,GAAG;QACzB,MAAM,EAAEA,IAAI,CAACP;MACjB,CAAC;MACDG,KAAK,CAACL,eAAe,CAACU,QAAQ,GAAG;QAC7B,MAAM,EAAEA,QAAQ,CAACR,IAAI;QACrB,YAAY,EAAEQ,QAAQ,CAACG;MAC3B,CAAC;MACDR,KAAK,CAACL,eAAe,CAACW,OAAO,GAAG;QAC5B,MAAM,EAAEA,OAAO,CAACT,IAAI;QACpB,MAAM,EAAES,OAAO,CAACG,IAAI,CAAC;MACzB,CAAC;IACL;EACJ;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEN,WAAW;EAAEJ;AAAiB,CAAC,GAAGH,cAAc,CAACc,OAAO;AAEvE,eAAed,cAAc,CAACe,OAAO;AAErC,OAAO,MAAMC,kBAAkB,GAAIZ,KAAK,IAAKA,KAAK,CAACN,SAAS,CAACA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}